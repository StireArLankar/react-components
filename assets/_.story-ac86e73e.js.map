{"version":3,"file":"_.story-ac86e73e.js","sources":["../../src/components/gesture/ScrollBar/ScrollBar.tsx","../../src/components/gesture/ScrollBar/_.story.tsx"],"sourcesContent":["import { useState, useEffect, useRef, Fragment, memo } from 'react'\r\nimport useMeasure from 'react-use-measure'\r\n\r\nimport { useSpring, animated } from '@react-spring/web'\r\nimport { useGesture } from '@use-gesture/react'\r\n\r\nimport classes from './_classes.css'\r\n\r\nconst getWheelBounds = (height: number, val: number) => ({\r\n  top: height <= 0 ? 0 : -val,\r\n  bottom: height <= 0 ? 0 : height - val,\r\n})\r\n\r\nconst getDragBounds = (height: number, val: number) => ({\r\n  top: height <= 0 ? 0 : -height + val,\r\n  bottom: height <= 0 ? 0 : val,\r\n})\r\n\r\nconst interpolateScroll = (content: number, container: number, val: number) =>\r\n  `scaleY(${container / content}) translateY(${(val * 100) / container}%)`\r\n\r\n// FIXME something is not working\r\nexport const ScrollBar = memo((props: { itemsAmount: number }) => {\r\n  const { itemsAmount } = props\r\n\r\n  const [counter, setCounter] = useState(0)\r\n  const increaseCounter = () => setCounter((prev) => prev + 1)\r\n\r\n  const [contentRef, { height: contentHeight }] = useMeasure()\r\n  const [containerRef, { height: containerHeight }] = useMeasure()\r\n\r\n  const height = contentHeight - containerHeight\r\n\r\n  const [val, setVal] = useState(0)\r\n  const [acting, setActing] = useState(false)\r\n\r\n  const [{ y }, spring] = useSpring(() => ({ y: 0 }))\r\n\r\n  useEffect(() => {\r\n    if (height < 0 && val > 0) {\r\n      setVal(0)\r\n      return\r\n    }\r\n\r\n    if (height > 0 && val > height) {\r\n      setVal(height)\r\n      return\r\n    }\r\n\r\n    spring.start({ y: val })\r\n  }, [val, spring, acting, height])\r\n\r\n  const handler = (y: number, check?: boolean) => {\r\n    if (check) {\r\n      spring.start({ y: val + y })\r\n    } else {\r\n      setVal((prev) => prev + y)\r\n      setImmediate(() => (isTap.current = true))\r\n    }\r\n  }\r\n\r\n  const isTap = useRef(true)\r\n\r\n  const bind = useGesture(\r\n    {\r\n      onDrag: ({ movement: [, y], down, tap }) => {\r\n        if (!tap) {\r\n          isTap.current = false\r\n        }\r\n        handler(-y, down)\r\n      },\r\n      onWheel: ({ movement: [, y], wheeling }) => handler(y, wheeling),\r\n      onWheelEnd: () => setActing(false),\r\n      onWheelStart: () => setActing(true),\r\n      onDragEnd: () => setActing(false),\r\n      onDragStart: () => setActing(true),\r\n      onClickCapture: (evt) => {\r\n        if (!isTap.current) {\r\n          evt.event.stopPropagation()\r\n          evt.event.preventDefault()\r\n        }\r\n      },\r\n    },\r\n    {\r\n      wheel: {\r\n        from: () => [0, 0],\r\n        bounds: () => getWheelBounds(height, val),\r\n        rubberband: height > 0 ? 0.3 : 0.15,\r\n      },\r\n      drag: {\r\n        from: () => [0, 0],\r\n        rubberband: height > 0 ? 0.3 : 0.15,\r\n        bounds: () => getDragBounds(height, val),\r\n        filterTaps: true,\r\n      },\r\n    }\r\n  )\r\n\r\n  const renderScrollBar = () => (\r\n    <div className={classes.progressWrapper}>\r\n      <animated.div\r\n        className={classes.progress}\r\n        style={{\r\n          transform: y.to((val) =>\r\n            interpolateScroll(contentHeight, containerHeight, val)\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n\r\n  const renderItems = (amount: number) => (\r\n    <>\r\n      <div onClick={increaseCounter} className={classes.block} />\r\n      {Array.from({ length: amount - 1 }).map((_, index) => (\r\n        <Fragment key={index}>\r\n          <div className={classes.spacer} />\r\n          <div onClick={increaseCounter} className={classes.block} />\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.container} {...bind()} ref={containerRef}>\r\n      <animated.div\r\n        className={classes.content}\r\n        ref={contentRef}\r\n        style={{\r\n          paddingRight: height > 0 ? 9 : 0,\r\n          transform: y.to((val) => `translate(0, ${-val}px)`),\r\n        }}\r\n      >\r\n        {renderItems(itemsAmount)}\r\n      </animated.div>\r\n      <div className={classes.counter}>{counter}</div>\r\n      {height > 0 && renderScrollBar()}\r\n    </div>\r\n  )\r\n})\r\n","import { Meta, StoryObj } from '@storybook/react';\nimport { withCenteredStyle } from '~/_storybook/withCenteredStyle';\nimport { withCustomTheme } from '~/_storybook/withCustomTheme';\nimport { ScrollBar as Component } from './ScrollBar';\nconst meta = ({\n  title: 'Gesture/ScrollBar',\n  component: Component,\n  decorators: [withCustomTheme, withCenteredStyle({})]\n} satisfies Meta<typeof Component>);\nexport default meta;\ntype Story = StoryObj<typeof meta>;\nexport const ScrollBar: Story = {\n  args: {\n    itemsAmount: 5\n  }\n};\nScrollBar.parameters = {\n  ...ScrollBar.parameters,\n  storySource: {\n    source: \"{\\n  args: {\\n    itemsAmount: 5\\n  }\\n}\",\n    ...ScrollBar.parameters?.storySource\n  }\n};"],"names":["getWheelBounds","height","val","getDragBounds","interpolateScroll","content","container","ScrollBar","memo","props","itemsAmount","counter","setCounter","useState","increaseCounter","prev","contentRef","contentHeight","useMeasure","containerRef","containerHeight","setVal","acting","setActing","y","spring","useSpring","useEffect","handler","y2","check","isTap","useRef","bind","useGesture","down","tap","wheeling","evt","renderScrollBar","jsx","classes","animated","val2","renderItems","amount","jsxs","Fragment","_","index","Fragment2","meta","Component","withCustomTheme","withCenteredStyle","_a"],"mappings":"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"}