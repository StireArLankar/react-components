{"version":3,"file":"_.story-8cf7c9aa.js","sources":["../../src/components/design/CustomSelect/index.tsx","../../src/components/design/CustomSelect/_.story.tsx"],"sourcesContent":["import { useMemo, useRef } from 'react'\r\nimport { useLayer } from 'react-laag'\r\n\r\nimport { useSelect } from 'downshift'\r\nimport { motion, AnimatePresence, Variants } from 'framer-motion'\r\n\r\nimport classes from './_classes.css'\r\n\r\nexport interface SelectProps {\r\n  value: string\r\n  items: { value: string; label: string }[]\r\n  onChange: (val: string) => void\r\n}\r\n\r\nconst variants: Variants = {\r\n  initial: {\r\n    opacity: 0,\r\n    height: 0,\r\n    overflowY: 'hidden',\r\n  },\r\n  animate: {\r\n    opacity: 1,\r\n    height: 'auto',\r\n    transitionEnd: {\r\n      overflowY: 'auto',\r\n    },\r\n  },\r\n  exit: { opacity: 0, height: 0, overflowY: 'hidden' },\r\n}\r\n\r\nconst variantsList: Variants = {\r\n  initial: {},\r\n  animate: {},\r\n  exit: {},\r\n}\r\n\r\nconst itemToString = (item: { value: string; label: string } | null) =>\r\n  item ? item.value : ''\r\n\r\nconst getLabel = (item: { value: string; label: string } | null) =>\r\n  item ? item.label : ''\r\n\r\nexport const Select = (props: SelectProps) => {\r\n  const { items, onChange, value } = props\r\n  // This is the place to store the fruits that match the input value\r\n\r\n  const selected = useMemo(() => {\r\n    return items.find((item) => item.value === value)\r\n  }, [items, value])\r\n\r\n  const {\r\n    isOpen,\r\n    selectedItem,\r\n    getToggleButtonProps,\r\n    getMenuProps,\r\n    getItemProps,\r\n    highlightedIndex,\r\n  } = useSelect({\r\n    // isOpen: true,\r\n    items: items,\r\n    circularNavigation: true,\r\n    itemToString: itemToString,\r\n    selectedItem: selected,\r\n    onSelectedItemChange: (val) =>\r\n      val.selectedItem?.value && onChange(val.selectedItem?.value),\r\n  })\r\n\r\n  const showMenu = isOpen\r\n\r\n  const ref = useRef<HTMLDivElement>(null)\r\n\r\n  const { renderLayer, triggerProps, layerProps, layerSide, triggerBounds } =\r\n    useLayer({\r\n      // container: ref.current ?? undefined,\r\n      isOpen: showMenu,\r\n      overflowContainer: true,\r\n      placement: 'bottom-center',\r\n      auto: true,\r\n      triggerOffset: 9,\r\n    })\r\n\r\n  return (\r\n    <div ref={ref} style={{ position: 'relative' }}>\r\n      <button\r\n        type='button'\r\n        {...getToggleButtonProps(triggerProps)}\r\n        className={classes.label}\r\n      >\r\n        <span>{getLabel(selectedItem) || '--'}</span>\r\n        <svg width='16' height='16' viewBox='0 0 16 16'>\r\n          <path\r\n            d='M3.52864 6.02861C3.78899 5.76826 4.2111 5.76826 4.47145 6.02861L8.00004 9.5572L11.5286 6.02861C11.789 5.76826 12.2111 5.76826 12.4714 6.02861C12.7318 6.28896 12.7318 6.71107 12.4714 6.97141L8.47145 10.9714C8.2111 11.2318 7.78899 11.2318 7.52864 10.9714L3.52864 6.97141C3.26829 6.71107 3.26829 6.28896 3.52864 6.02861Z'\r\n            fill='currentColor'\r\n          />\r\n        </svg>\r\n      </button>\r\n      <div {...getMenuProps()}>\r\n        {renderLayer(\r\n          <AnimatePresence>\r\n            {showMenu && (\r\n              <motion.div\r\n                ref={layerProps.ref}\r\n                className={classes.wrapper}\r\n                variants={variants}\r\n                initial='initial'\r\n                animate='animate'\r\n                exit='exit'\r\n                style={{\r\n                  ...layerProps.style,\r\n                  width: triggerBounds?.width,\r\n                  originY: layerSide === 'top' ? '100%' : 0,\r\n                }}\r\n                transition={{ duration: 0.2 }}\r\n              >\r\n                <motion.ul\r\n                  variants={variantsList}\r\n                  transition={{ duration: 0.2 }}\r\n                  className={classes.list}\r\n                >\r\n                  {items.map((item, index) => (\r\n                    <li\r\n                      key={`${item}${index}`}\r\n                      className={classes.item({\r\n                        active: highlightedIndex === index,\r\n                      })}\r\n                      {...getItemProps({ item, index })}\r\n                    >\r\n                      {item.label}\r\n                    </li>\r\n                  ))}\r\n                </motion.ul>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import { useState } from 'react';\nimport { withCenteredStyle } from '~/_storybook/withCenteredStyle';\nimport { withCustomTheme } from '~/_storybook/withCustomTheme';\nimport Component from '.';\nexport default {\n  title: 'Design/CustomSelect',\n  decorators: [withCustomTheme, withCenteredStyle({\n    width: '100%',\n    background: 'teal',\n    minHeight: `160vh`,\n    display: 'grid',\n    placeItems: 'center'\n  })],\n  component: Component\n};\nconst options = [{\n  label: 'Option 1',\n  value: '1'\n}, {\n  label: 'Option 2',\n  value: '2'\n}, {\n  label: 'Option 3',\n  value: '3'\n}, {\n  label: 'Option 4',\n  value: '4'\n}, {\n  label: 'Option 5',\n  value: '5'\n}];\nconst Controlled = () => {\n  const [value, setValue] = useState('1');\n  return <div style={{\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, auto)',\n    gridGap: 10,\n    alignItems: 'center'\n  }}>\r\n      <a href='#11'>for accessible</a>\r\n      <Component value={value} onChange={setValue} items={options} />\r\n\r\n      <a href='#11'>for accessible</a>\r\n\r\n      <div style={{\n      position: 'fixed',\n      bottom: 0,\n      margin: '0 auto',\n      left: '50%',\n      transform: 'translate(-50%)'\n    }}>\r\n        <Component value={value} onChange={setValue} items={options} />\r\n      </div>\r\n    </div>;\n};\nexport const Example = () => <Controlled />;\nExample.parameters = {\n  ...Example.parameters,\n  storySource: {\n    source: \"() => <Controlled />\",\n    ...Example.parameters?.storySource\n  }\n};"],"names":["variants","variantsList","itemToString","item","getLabel","Select","props","items","onChange","value","selected","useMemo","isOpen","selectedItem","getToggleButtonProps","getMenuProps","getItemProps","highlightedIndex","useSelect","val","_a","_b","showMenu","ref","useRef","renderLayer","triggerProps","layerProps","layerSide","triggerBounds","useLayer","jsxs","classes","jsx","AnimatePresence","motion","index","Component","__story","withCustomTheme","withCenteredStyle","options","Controlled","setValue","useState","Example"],"mappings":"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"}