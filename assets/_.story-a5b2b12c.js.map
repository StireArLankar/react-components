{"version":3,"file":"_.story-a5b2b12c.js","sources":["../../src/components/spring/Tree/icons.tsx","../../src/components/spring/Tree/v2/index.tsx","../../src/components/spring/Tree/index.tsx","../../src/components/spring/Tree/_.story.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst MinusSquareO = (props: React.SVGProps<SVGSVGElement>) => (\r\n  <svg {...props} viewBox='64 -65 897 897'>\r\n    <g>\r\n      <path\r\n        d='M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 347h-442q-14 0 -25 10.5t-11 25.5v0q0 15 11 25.5t25 10.5h442q14 0 25 -10.5t11 -25.5v0\r\n  q0 -15 -11 -25.5t-25 -10.5z'\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nconst PlusSquareO = (props: React.SVGProps<SVGSVGElement>) => (\r\n  <svg {...props} viewBox='64 -65 897 897'>\r\n    <g>\r\n      <path\r\n        d='M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 420h-184v183q0 15 -10.5 25.5t-25.5 10.5v0q-14 0 -25 -10.5t-11 -25.5v-183h-184\r\n  q-15 0 -25.5 -11t-10.5 -25v0q0 -15 10.5 -25.5t25.5 -10.5h184v-183q0 -15 11 -25.5t25 -10.5v0q15 0 25.5 10.5t10.5 25.5v183h184q15 0 25.5 10.5t10.5 25.5v0q0 14 -10.5 25t-25.5 11z'\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nconst CloseSquareO = (props: React.SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    {...props}\r\n    viewBox='64 -65 897 897'\r\n    style={{ opacity: 0.3, ...props.style }}\r\n  >\r\n    <g>\r\n      <path\r\n        d='M717.5 589.5q-10.5 10.5 -25.5 10.5t-26 -10l-154 -155l-154 155q-11 10 -26 10t-25.5 -10.5t-10.5 -25.5t11 -25l154 -155l-154 -155q-11 -10 -11 -25t10.5 -25.5t25.5 -10.5t26 10l154 155l154 -155q11 -10 26 -10t25.5 10.5t10.5 25t-11 25.5l-154 155l154 155\r\n  q11 10 11 25t-10.5 25.5zM888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0z'\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nexport { PlusSquareO, MinusSquareO, CloseSquareO }\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, { memo, useEffect, useRef, useState } from 'react'\r\nimport useMeasure from 'react-use-measure'\r\n\r\nimport { animated, useSpring } from '@react-spring/web'\r\n\r\nimport classes from '../_classes.css'\r\nimport * as Icons from '../icons'\r\n\r\ntype Base = {\r\n  meta?: boolean\r\n  title: string\r\n}\r\n\r\ntype Data = Base &\r\n  (\r\n    | {\r\n        type: 'branch'\r\n        nodes: Data[]\r\n      }\r\n    | {\r\n        type: 'leaf'\r\n        title: string\r\n      }\r\n  )\r\n\r\nconst data: Data = {\r\n  type: 'branch',\r\n  title: 'Data navigation tree',\r\n  nodes: [\r\n    {\r\n      title: 'Database by themes',\r\n      nodes: [\r\n        {\r\n          title: 'General and regional statistics',\r\n          nodes: [\r\n            {\r\n              title:\r\n                'European and national indicators for short-term analysis (euroind)\t',\r\n              type: 'branch',\r\n              nodes: [\r\n                {\r\n                  title:\r\n                    'Business and consumer surveys (source: DG ECFIN) (ei_bcs)',\r\n                  type: 'branch',\r\n                  nodes: [],\r\n                  meta: true,\r\n                },\r\n                {\r\n                  title: 'Balance of payments (ei_bp)',\r\n                  type: 'branch',\r\n                  nodes: [\r\n                    {\r\n                      title: 'Current account - quarterly data (ei_bpm6ca_q)',\r\n                      type: 'leaf',\r\n                      meta: true,\r\n                    },\r\n                    {\r\n                      title: 'Financial account - quarterly data (ei_bpm6fa_q)',\r\n                      type: 'leaf',\r\n                      meta: true,\r\n                    },\r\n                    {\r\n                      title: 'Current account - monthly data (ei_bpm6ca_m)',\r\n                      type: 'leaf',\r\n                      meta: true,\r\n                    },\r\n                    {\r\n                      title: 'Financial account - monthly data (ei_bpm6fa_m)',\r\n                      type: 'leaf',\r\n                      meta: true,\r\n                    },\r\n                    {\r\n                      title:\r\n                        'International investment position - quarterly data (ei_bpm6iip_q)',\r\n                      type: 'leaf',\r\n                      meta: true,\r\n                    },\r\n                  ],\r\n                  meta: true,\r\n                },\r\n                {\r\n                  title: 'Consumer prices (ei_cp)',\r\n                  type: 'branch',\r\n                  nodes: [],\r\n                  meta: true,\r\n                },\r\n                {\r\n                  title: 'Housing price statistics (ei_hp)',\r\n                  type: 'branch',\r\n                  nodes: [],\r\n                },\r\n                {\r\n                  title: 'International trade (ei_et)',\r\n                  type: 'branch',\r\n                  nodes: [],\r\n                  meta: true,\r\n                },\r\n                {\r\n                  title: 'Industry, trade and services (ei_is)',\r\n                  type: 'branch',\r\n                  nodes: [],\r\n                  meta: true,\r\n                },\r\n                { title: 'Labour market (ei_lm)', type: 'branch', nodes: [] },\r\n                {\r\n                  title: 'Monetary and financial indicators (ei_mf)',\r\n                  type: 'branch',\r\n                  nodes: [],\r\n                  meta: true,\r\n                },\r\n                {\r\n                  title: 'National accounts (ei_qna)',\r\n                  type: 'branch',\r\n                  nodes: [],\r\n                },\r\n              ],\r\n              meta: true,\r\n            },\r\n            {\r\n              title: 'Regional statistics by NUTS classification (reg)\t',\r\n              type: 'branch',\r\n              nodes: [],\r\n            },\r\n            {\r\n              title: 'Regional statistics by typology (reg_typ)\t',\r\n              type: 'branch',\r\n              nodes: [],\r\n              meta: true,\r\n            },\r\n            {\r\n              title: 'Degree of urbanisation (degurb)\t',\r\n              type: 'branch',\r\n              nodes: [],\r\n            },\r\n            {\r\n              title: 'City statistics (urb)\t',\r\n              type: 'branch',\r\n              nodes: [],\r\n              meta: true,\r\n            },\r\n            {\r\n              title: 'Other sub-national statistics (reg_nat)\t',\r\n              type: 'branch',\r\n              nodes: [],\r\n            },\r\n            {\r\n              title: 'Land cover and land use, landscape (LUCAS) (lan)\t',\r\n              type: 'branch',\r\n              nodes: [],\r\n              meta: true,\r\n            },\r\n            { title: 'Non EU countries (noneu)\t', type: 'branch', nodes: [] },\r\n          ],\r\n          type: 'branch',\r\n        },\r\n        { title: 'Economy and finance\t', nodes: [], type: 'branch' },\r\n        {\r\n          title: 'Population and social conditions\t',\r\n          nodes: [],\r\n          type: 'branch',\r\n        },\r\n        { title: 'Industry, trade and services\t', nodes: [], type: 'branch' },\r\n        {\r\n          title: 'Agriculture, forestry and fisheries\t',\r\n          nodes: [],\r\n          type: 'branch',\r\n        },\r\n        { title: 'International trade in goods\t', nodes: [], type: 'branch' },\r\n        { title: 'Transport\t', nodes: [], type: 'branch' },\r\n        { title: 'Environment and energy\t', nodes: [], type: 'branch' },\r\n        {\r\n          title: 'Science, technology, digital society\t',\r\n          nodes: [],\r\n          type: 'branch',\r\n        },\r\n      ],\r\n      type: 'branch',\r\n    },\r\n    { title: 'Tables by themes', nodes: [], type: 'branch' },\r\n    { title: 'Tables on EU policy', nodes: [], type: 'branch' },\r\n    { title: 'Cross cutting topics', nodes: [], type: 'branch' },\r\n    { title: 'New Items (sorted by code)', nodes: [], type: 'branch' },\r\n    {\r\n      title: 'Recently Updated Items (sorted by code)',\r\n      nodes: [],\r\n      type: 'branch',\r\n    },\r\n  ],\r\n}\r\n\r\ntype TreeProps = Data & {\r\n  style?: React.CSSProperties\r\n  defaultOpen?: boolean\r\n}\r\n\r\nconst getIcon = (hasNodes: boolean, isOpen?: boolean) => {\r\n  if (!hasNodes) {\r\n    return Icons.CloseSquareO\r\n  }\r\n\r\n  return isOpen ? Icons.MinusSquareO : Icons.PlusSquareO\r\n}\r\n\r\nconst trans = (val: number) => `translate3d(${20 - 20 * val}px,0,0)`\r\n\r\nconst Tree = memo((props: TreeProps) => {\r\n  const { style, defaultOpen = false } = props\r\n\r\n  const [isOpen, setOpen] = useState(defaultOpen)\r\n  const toggle = () => setOpen((prev) => !prev)\r\n\r\n  const previous = usePrevious(isOpen)\r\n\r\n  const [ref, { height: viewHeight }] = useMeasure()\r\n\r\n  const { height, opacity } = useSpring({\r\n    height: isOpen ? viewHeight : 0,\r\n    opacity: isOpen ? 1 : 0,\r\n  })\r\n\r\n  const canExpand = props.type === 'branch' && props.nodes.length > 0\r\n\r\n  const Icon = getIcon(canExpand, isOpen)\r\n\r\n  return (\r\n    <div className={classes.frame}>\r\n      <div\r\n        onClick={canExpand ? toggle : undefined}\r\n        style={{\r\n          cursor: props.type === 'branch' ? 'pointer' : 'default',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          willChange: 'transform',\r\n          gap: 4,\r\n        }}\r\n      >\r\n        {props.type === 'leaf' ? (\r\n          <Table />\r\n        ) : (\r\n          <Icon className={classes.toggle} />\r\n        )}\r\n        {props.type === 'leaf' && <Table />}\r\n        {props.type === 'leaf' && <Table />}\r\n        <span className={classes.title} style={style}>\r\n          {props.title}\r\n        </span>\r\n        {props.meta ? <M /> : null}\r\n      </div>\r\n\r\n      <animated.div\r\n        className={classes.content}\r\n        style={{\r\n          opacity,\r\n          height: isOpen && previous === isOpen ? 'auto' : height,\r\n        }}\r\n      >\r\n        <animated.div style={{ transform: opacity.to(trans) }} ref={ref}>\r\n          {props.type === 'branch'\r\n            ? props.nodes.map((node) => <Tree {...node} key={node.title} />)\r\n            : null}\r\n        </animated.div>\r\n      </animated.div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default () => <Tree {...data} defaultOpen />\r\n\r\nfunction usePrevious<T>(value: T): T | undefined {\r\n  const ref = useRef<T>(value)\r\n\r\n  useEffect(() => void (ref.current = value), [value])\r\n\r\n  return ref.current\r\n}\r\n\r\nconst M = () => (\r\n  <svg viewBox='0 0 24 24' width={16}>\r\n    <path d='M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z' />\r\n  </svg>\r\n)\r\n\r\nconst Table = () => (\r\n  <svg viewBox='0 0 24 24' width={16}>\r\n    <path d='M10 10.02h5V21h-5zM17 21h3c1.1 0 2-.9 2-2v-9h-5v11zm3-18H5c-1.1 0-2 .9-2 2v3h19V5c0-1.1-.9-2-2-2zM3 19c0 1.1.9 2 2 2h3V10H3v9z' />\r\n  </svg>\r\n)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, {\r\n  memo,\r\n  PropsWithChildren,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport useMeasure from 'react-use-measure'\r\n\r\nimport { animated, useSpring } from '@react-spring/web'\r\n\r\nimport classes from './_classes.css'\r\nimport * as Icons from './icons'\r\n\r\ninterface TreeProps {\r\n  name: string | React.ReactElement\r\n  style?: React.CSSProperties\r\n  defaultOpen?: boolean\r\n}\r\n\r\nconst getIcon = (children: any, isOpen?: boolean) => {\r\n  if (!children) {\r\n    return Icons.CloseSquareO\r\n  }\r\n\r\n  return isOpen ? Icons.MinusSquareO : Icons.PlusSquareO\r\n}\r\n\r\nconst trans = (val: number) => `translate3d(${20 - 20 * val}px,0,0)`\r\n\r\nconst Tree = memo((props: PropsWithChildren<TreeProps>) => {\r\n  const { children, name, style, defaultOpen = false } = props\r\n\r\n  const [isOpen, setOpen] = useState(defaultOpen)\r\n  const toggle = () => setOpen((prev) => !prev)\r\n\r\n  const previous = usePrevious(isOpen)\r\n\r\n  const [ref, { height: viewHeight }] = useMeasure()\r\n\r\n  const { height, opacity } = useSpring({\r\n    height: isOpen ? viewHeight : 0,\r\n    opacity: isOpen ? 1 : 0,\r\n  })\r\n\r\n  const Icon = getIcon(children, isOpen)\r\n\r\n  return (\r\n    <div className={classes.frame}>\r\n      <Icon className={classes.toggle} onClick={toggle} />\r\n\r\n      <span className={classes.title} style={style}>\r\n        {name}\r\n      </span>\r\n\r\n      <animated.div\r\n        className={classes.content}\r\n        style={{\r\n          opacity,\r\n          height: isOpen && previous === isOpen ? 'auto' : height,\r\n        }}\r\n      >\r\n        <animated.div style={{ transform: opacity.to(trans) }} ref={ref}>\r\n          {children}\r\n        </animated.div>\r\n      </animated.div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default () => (\r\n  <>\r\n    <Tree name='main' defaultOpen>\r\n      <Tree name='hello' />\r\n      <Tree name='subtree with children'>\r\n        <Tree name='hello' />\r\n        <Tree name='sub-subtree with children'>\r\n          <Tree name='child 1' style={{ color: '#37ceff' }} />\r\n          <Tree name='child 2' style={{ color: '#37ceff' }} />\r\n          <Tree name='child 3' style={{ color: '#37ceff' }} />\r\n          <Tree name='custom content'>\r\n            <div\r\n              style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: 200,\r\n                padding: 10,\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  background: 'black',\r\n                  borderRadius: 5,\r\n                }}\r\n              />\r\n            </div>\r\n          </Tree>\r\n        </Tree>\r\n        <Tree name='hello' />\r\n      </Tree>\r\n      <Tree name='world' />\r\n      <Tree name={<span>🙀 something something</span>} />\r\n    </Tree>\r\n  </>\r\n)\r\n\r\nfunction usePrevious<T>(value: T): T | undefined {\r\n  const ref = useRef<T>(value)\r\n\r\n  useEffect(() => void (ref.current = value), [value])\r\n\r\n  return ref.current\r\n}\r\n","import { withCustomTheme } from '~/_storybook/withCustomTheme';\nimport { withTopLabel } from '~/_storybook/withTopLabel';\nimport { storyLink, vars } from '~/theme/theme.css';\nimport V2 from './v2';\nimport Component from '.';\nconst label = <>\r\n    <span>Credits to </span>\r\n    <a className={storyLink} href='https://www.react-spring.io'>\r\n      docs\r\n    </a>\r\n  </>;\nexport default {\n  title: 'Spring/Tree',\n  decorators: [withCustomTheme, withTopLabel(label)]\n};\nexport const Tree = () => <div style={{\n  background: vars.color.dark,\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  minWidth: '100vw',\n  minHeight: '100vh',\n  padding: 30,\n  bottom: 0,\n  overflow: 'auto'\n}}>\r\n    <Component />\r\n  </div>;\nexport const Version2 = () => <div style={{\n  background: vars.color.dark,\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  minWidth: '100vw',\n  minHeight: '100vh',\n  padding: 30,\n  bottom: 0,\n  overflow: 'auto'\n}}>\r\n    <V2 />\r\n  </div>;\nTree.parameters = {\n  ...Tree.parameters,\n  storySource: {\n    source: \"() => <div style={{\\n  background: vars.color.dark,\\n  position: 'fixed',\\n  top: 0,\\n  left: 0,\\n  minWidth: '100vw',\\n  minHeight: '100vh',\\n  padding: 30,\\n  bottom: 0,\\n  overflow: 'auto'\\n}}>\\r\\n    <Component />\\r\\n  </div>\",\n    ...Tree.parameters?.storySource\n  }\n};\nVersion2.parameters = {\n  ...Version2.parameters,\n  storySource: {\n    source: \"() => <div style={{\\n  background: vars.color.dark,\\n  position: 'fixed',\\n  top: 0,\\n  left: 0,\\n  minWidth: '100vw',\\n  minHeight: '100vh',\\n  padding: 30,\\n  bottom: 0,\\n  overflow: 'auto'\\n}}>\\r\\n    <V2 />\\r\\n  </div>\",\n    ...Version2.parameters?.storySource\n  }\n};"],"names":["MinusSquareO","props","jsx","PlusSquareO","CloseSquareO","data","getIcon","hasNodes","isOpen","Icons.MinusSquareO","Icons.PlusSquareO","Icons.CloseSquareO","trans","val","Tree","memo","style","defaultOpen","setOpen","useState","toggle","prev","previous","usePrevious","ref","viewHeight","useMeasure","height","opacity","useSpring","canExpand","Icon","jsxs","classes","Table","M","animated","node","createElement","V2","value","useRef","useEffect","children","name","Component","Fragment","label","storyLink","__story","withCustomTheme","withTopLabel","vars","Version2","_a"],"mappings":"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"}