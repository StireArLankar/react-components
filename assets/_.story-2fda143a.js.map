{"version":3,"file":"_.story-2fda143a.js","sources":["../../src/components/native/SectoralMenu/index.tsx","../../src/components/native/SectoralMenu/_.story.tsx"],"sourcesContent":["import { useState } from 'react'\r\n\r\nimport classes from './_classes.css'\r\n\r\nexport type SectoralMenuProps = {\r\n  buttons: SectoralButtonModel[]\r\n}\r\n\r\nexport type SectoralButtonModel = {\r\n  onClick: () => void\r\n  Icon: (props: React.SVGProps<SVGSVGElement>) => JSX.Element\r\n}\r\n\r\nconst getSkew = (length: number) => 90 - 190 / length\r\nconst getItemRotation = (index: number, length: number) =>\r\n  index * (190 / length) - 5\r\nconst getButtonRotation = (length: number) => 90 - 190 / (length * 2)\r\n\r\nconst getItemStyle = (index: number, length: number) => ({\r\n  transform: `rotate(${getItemRotation(index, length)}deg) skew(${getSkew(\r\n    length\r\n  )}deg)`,\r\n})\r\n\r\nconst getButtonStyle = (length: number) => ({\r\n  transform: `skew(-${getSkew(length)}deg) rotate(-${getButtonRotation(\r\n    length\r\n  )}deg) scale(1)`,\r\n})\r\n\r\nexport const SectoralMenu = (props: SectoralMenuProps) => {\r\n  const { buttons } = props\r\n\r\n  const length = buttons.length\r\n\r\n  const [isOpen, setIsOpen] = useState(true)\r\n\r\n  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n\r\n  const renderButtons = () =>\r\n    buttons.map(({ Icon, ...rest }, index) => (\r\n      <li\r\n        key={index}\r\n        className={classes.item()}\r\n        style={getItemStyle(index, length)}\r\n      >\r\n        <button\r\n          {...rest}\r\n          className={classes.itemButton}\r\n          style={getButtonStyle(length)}\r\n        >\r\n          <Icon className={classes.icon} />\r\n        </button>\r\n      </li>\r\n    ))\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <button className={classes.button} onClick={toggleMenu}>\r\n        +\r\n      </button>\r\n      <div className={classes.listWrapper({ open: isOpen })}>\r\n        <ul className={classes.list}>{renderButtons()}</ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { ComponentStory } from '@storybook/react';\nimport { withCenteredStyle } from '~/_storybook/withCenteredStyle';\nimport { withCustomTheme } from '~/_storybook/withCustomTheme';\nimport { withTopLabel } from '~/_storybook/withTopLabel';\nimport { Adjust, CameraRounded, EmojiEventsRounded, GroupWork, MyLocationRounded, ViewComfyRounded } from '~/components/materialSvgs';\nimport { storyLink } from '~/theme/theme.css';\nimport { SectoralMenu, SectoralButtonModel } from '.';\nconst label = <>\r\n    <span>Credits to </span>\r\n    <a className={storyLink} href='https://tympanus.net/Tutorials/CircularNavigation/index.html'>\r\n      Nice guide\r\n    </a>\r\n  </>;\nexport default {\n  title: 'Native/Sectoral Menu',\n  decorators: [withCenteredStyle(), withCustomTheme, withTopLabel(label)]\n};\nconst buttons: SectoralButtonModel[] = [{\n  Icon: Adjust,\n  onClick: () => {}\n}, {\n  Icon: GroupWork,\n  onClick: () => {}\n}, {\n  Icon: CameraRounded,\n  onClick: () => {}\n}, {\n  Icon: EmojiEventsRounded,\n  onClick: () => {}\n}, {\n  Icon: MyLocationRounded,\n  onClick: () => {}\n}, {\n  Icon: ViewComfyRounded,\n  onClick: () => {}\n}];\ntype Props = {\n  buttonsAmount: number;\n};\nconst Temp = ({\n  buttonsAmount\n}: Props) => <SectoralMenu buttons={buttons.slice(0, buttonsAmount)} />;\nconst Template1: ComponentStory<typeof Temp> = props => <Temp {...props} />;\nexport const _SectoralMenu = Template1.bind({});\n_SectoralMenu.args = {\n  buttonsAmount: buttons.length\n};\n_SectoralMenu.argTypes = {\n  buttonsAmount: {\n    control: {\n      type: 'range',\n      min: 1,\n      max: buttons.length\n    }\n  }\n};\n_SectoralMenu.parameters = {\n  ..._SectoralMenu.parameters,\n  storySource: {\n    source: \"props => <Temp {...props} />\",\n    ..._SectoralMenu.parameters?.storySource\n  }\n};"],"names":["getSkew","length","getItemRotation","index","getButtonRotation","getItemStyle","getButtonStyle","SectoralMenu","props","buttons","isOpen","setIsOpen","useState","toggleMenu","prev","renderButtons","Icon","rest","jsx","classes","jsxs","label","Fragment","storyLink","__story","withCenteredStyle","withCustomTheme","withTopLabel","Adjust","GroupWork","CameraRounded","EmojiEventsRounded","MyLocationRounded","ViewComfyRounded","Temp","buttonsAmount","Template1","_SectoralMenu","_a"],"mappings":"o2BAaAA,EAAAC,GAAA,GAAA,IAAAA,EACAC,EAAA,CAAAC,EAAAF,IAAAE,GAAA,IAAAF,GAAA,EAEAG,EAAAH,GAAA,GAAA,KAAAA,EAAA,GAEAI,EAAA,CAAAF,EAAAF,KAAA,CAAyD,UAAA,UAAAC,EAAAC,EAAAF,CAAA,cAAAD,EACSC,CAC9D,OAEJ,GAEAK,EAAAL,IAAA,CAA4C,UAAA,SAAAD,EAAAC,CAAA,iBAAAG,EACSH,CACjD,gBAEJ,GAEOM,EAAAC,GAAA,CACL,KAAA,CAAA,QAAAC,CAAA,EAAAD,EAEAP,EAAAQ,EAAA,OAEA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEAC,EAAA,IAAAF,EAAAG,GAAA,CAAAA,CAAA,EAEAC,EAAA,IAAAN,EAAA,IAAA,CAAA,CAAA,KAAAO,EAAA,GAAAC,GAAAd,IAAAe,EAAA,IAEI,KAAC,CAAA,UAAAC,EAAA,KAAA,EAEyB,MAAAd,EAAAF,EAAAF,CAAA,EACS,SAAAiB,EAAA,IAEjC,SAAC,CAAA,GAAAD,EACK,UAAAE,EAAA,WACe,MAAAb,EAAAL,CAAA,EACS,SAAAiB,EAAA,IAAAF,EAAA,CAAA,UAAAG,EAAA,KAAA,CAEG,CAAA,CACjC,EAAAhB,CAVK,CAAA,EAcX,OAAAiB,EAAAA,KAAA,MAAA,CAAA,UAAAD,EAAA,QAAA,SAAA,CAEID,MAAA,SAAA,CAAA,UAAAC,EAAA,OAAA,QAAAN,EAAA,SAAA,IAAA,EAEAK,MAAA,MAAA,CAAA,UAAAC,EAAA,YAAA,CAAA,KAAAT,CAAA,CAAA,EAAA,SAAAQ,EAAAA,IAAA,KAAA,CAAA,UAAAC,EAAA,KAAA,SAAAJ,GAAA,CAAA,EAAA,CAGA,CAAA,CAAA,CAGN,uNC3DA,MAAMM,EACFD,EAAA,KAAAE,WAAA,CAAA,SAAA,CAAAJ,EAAAA,IAAC,QAAK,SAAW,aAAA,CAAA,QAChB,IAAE,CAAA,UAAWK,EAAW,KAAK,+DAA+D,SAE7F,aAAA,CAAA,CACF,CAAA,EACaC,EAAA,CACb,MAAO,uBACP,WAAY,CAACC,IAAqBC,EAAiBC,EAAaN,CAAK,CAAC,CACxE,EACMZ,EAAiC,CAAC,CACtC,KAAMmB,EACN,QAAS,IAAM,CAAC,CAClB,EAAG,CACD,KAAMC,EACN,QAAS,IAAM,CAAC,CAClB,EAAG,CACD,KAAMC,EACN,QAAS,IAAM,CAAC,CAClB,EAAG,CACD,KAAMC,EACN,QAAS,IAAM,CAAC,CAClB,EAAG,CACD,KAAMC,EACN,QAAS,IAAM,CAAC,CAClB,EAAG,CACD,KAAMC,EACN,QAAS,IAAM,CAAC,CAClB,CAAC,EAIKC,EAAO,CAAC,CACZ,cAAAC,CACF,UAAc5B,EAAa,CAAA,QAASE,EAAQ,MAAM,EAAG0B,CAAa,CAAG,CAAA,EAC/DC,EAAyC5B,GAAUU,EAAA,IAAAgB,EAAA,CAAM,GAAG1B,CAAO,CAAA,EAC5D6B,EAAgBD,EAAU,KAAK,EAAE,EAC9CC,EAAc,KAAO,CACnB,cAAe5B,EAAQ,MACzB,EACA4B,EAAc,SAAW,CACvB,cAAe,CACb,QAAS,CACP,KAAM,QACN,IAAK,EACL,IAAK5B,EAAQ,MACf,CACF,CACF,QACA4B,EAAc,WAAa,CACzB,GAAGA,EAAc,WACjB,YAAa,CACX,OAAQ,+BACR,IAAGC,EAAAD,EAAc,aAAd,YAAAC,EAA0B,WAC/B,CACF"}