{"version":3,"file":"Autocomplete.story-7a93bd24.js","sources":["../../src/components/native/Autocomplete/Autocomplete.tsx","../../src/components/native/Autocomplete/countries.ts","../../src/components/native/Autocomplete/index.tsx","../../src/components/native/Autocomplete/Autocomplete.story.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, MouseEvent } from 'react'\r\n\r\nimport style from './autocomplete.module.scss'\r\n\r\ninterface AutocompleteProps {\r\n  items: string[]\r\n}\r\n\r\nconst Autocomplete = (props: AutocompleteProps) => {\r\n  const [value, setValue] = useState('')\r\n  const [suggestion, setSuggestion] = useState<string[]>([])\r\n\r\n  const onTextInput = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const value = evt.target.value\r\n    setValue(value)\r\n    if (value.length > 0) {\r\n      const reg = new RegExp(`^${value}`, `i`)\r\n      const reg2 = new RegExp(`^${value}$`, `i`)\r\n      const it = props.items\r\n        .filter((v) => reg.test(v))\r\n        .filter((v) => !reg2.test(v))\r\n      setSuggestion(it)\r\n    } else {\r\n      setSuggestion([])\r\n    }\r\n  }\r\n\r\n  const onItemClick = (value: string) => (e: MouseEvent) => {\r\n    e.preventDefault()\r\n    setValue(value)\r\n    setSuggestion([])\r\n  }\r\n\r\n  const renderList = () => {\r\n    if (suggestion.length === 0) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <ul className={style.list}>\r\n        {suggestion.map((item) => (\r\n          <li className={style.item} key={item} onClick={onItemClick(item)}>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <input\r\n        type='text'\r\n        className={style.input}\r\n        onChange={onTextInput}\r\n        value={value}\r\n      />\r\n      {renderList()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Autocomplete\r\n","export default `Afghanistan\r\nAlbania\r\nAlgeria\r\nAndorra\r\nAngola\r\nAntigua & Deps\r\nArgentina\r\nArmenia\r\nAustralia\r\nAustria\r\nAzerbaijan\r\nBahamas\r\nBahrain\r\nBangladesh\r\nBarbados\r\nBelarus\r\nBelgium\r\nBelize\r\nBenin\r\nBhutan\r\nBolivia\r\nBosnia Herzegovina\r\nBotswana\r\nBrazil\r\nBrunei\r\nBulgaria\r\nBurkina\r\nBurundi\r\nCambodia\r\nCameroon\r\nCanada\r\nCape Verde\r\nCentral African Rep\r\nChad\r\nChile\r\nChina\r\nColombia\r\nComoros\r\nCongo\r\nCongo {Democratic Rep}\r\nCosta Rica\r\nCroatia\r\nCuba\r\nCyprus\r\nCzech Republic\r\nDenmark\r\nDjibouti\r\nDominica\r\nDominican Republic\r\nEast Timor\r\nEcuador\r\nEgypt\r\nEl Salvador\r\nEquatorial Guinea\r\nEritrea\r\nEstonia\r\nEthiopia\r\nFiji\r\nFinland\r\nFrance\r\nGabon\r\nGambia\r\nGeorgia\r\nGermany\r\nGhana\r\nGreece\r\nGrenada\r\nGuatemala\r\nGuinea\r\nGuinea-Bissau\r\nGuyana\r\nHaiti\r\nHonduras\r\nHungary\r\nIceland\r\nIndia\r\nIndonesia\r\nIran\r\nIraq\r\nIreland {Republic}\r\nIsrael\r\nItaly\r\nIvory Coast\r\nJamaica\r\nJapan\r\nJordan\r\nKazakhstan\r\nKenya\r\nKiribati\r\nKorea North\r\nKorea South\r\nKosovo\r\nKuwait\r\nKyrgyzstan\r\nLaos\r\nLatvia\r\nLebanon\r\nLesotho\r\nLiberia\r\nLibya\r\nLiechtenstein\r\nLithuania\r\nLuxembourg\r\nMacedonia\r\nMadagascar\r\nMalawi\r\nMalaysia\r\nMaldives\r\nMali\r\nMalta\r\nMarshall Islands\r\nMauritania\r\nMauritius\r\nMexico\r\nMicronesia\r\nMoldova\r\nMonaco\r\nMongolia\r\nMontenegro\r\nMorocco\r\nMozambique\r\nMyanmar, {Burma}\r\nNamibia\r\nNauru\r\nNepal\r\nNetherlands\r\nNew Zealand\r\nNicaragua\r\nNiger\r\nNigeria\r\nNorway\r\nOman\r\nPakistan\r\nPalau\r\nPanama\r\nPapua New Guinea\r\nParaguay\r\nPeru\r\nPhilippines\r\nPoland\r\nPortugal\r\nQatar\r\nRomania\r\nRussian Federation\r\nRwanda\r\nSt Kitts & Nevis\r\nSt Lucia\r\nSaint Vincent & the Grenadines\r\nSamoa\r\nSan Marino\r\nSao Tome & Principe\r\nSaudi Arabia\r\nSenegal\r\nSerbia\r\nSeychelles\r\nSierra Leone\r\nSingapore\r\nSlovakia\r\nSlovenia\r\nSolomon Islands\r\nSomalia\r\nSouth Africa\r\nSouth Sudan\r\nSpain\r\nSri Lanka\r\nSudan\r\nSuriname\r\nSwaziland\r\nSweden\r\nSwitzerland\r\nSyria\r\nTaiwan\r\nTajikistan\r\nTanzania\r\nThailand\r\nTogo\r\nTonga\r\nTrinidad & Tobago\r\nTunisia\r\nTurkey\r\nTurkmenistan\r\nTuvalu\r\nUganda\r\nUkraine\r\nUnited Arab Emirates\r\nUnited Kingdom\r\nUnited States\r\nUruguay\r\nUzbekistan\r\nVanuatu\r\nVatican City\r\nVenezuela\r\nVietnam\r\nYemen\r\nZambia\r\nZimbabwe`.split('\\n')\r\n","import React from 'react'\r\n\r\nimport useBGColor from '~/hook/useBgColor'\r\n\r\nimport Autocomplete from './Autocomplete'\r\nimport array from './countries'\r\n\r\nexport const AutocompleteContainer = () => {\r\n  useBGColor(240, 208, 233)\r\n\r\n  return <Autocomplete items={array} />\r\n}\r\n\r\nexport default AutocompleteContainer\r\n","import { withCenteredStyle } from '~/_storybook/withCenteredStyle';\nimport { withCustomTheme } from '~/_storybook/withCustomTheme';\nimport { AutocompleteContainer } from '.';\nexport default {\n  title: 'Native/Autocomplete',\n  decorators: [withCenteredStyle({\n    width: 440,\n    alignSelf: 'flex-start',\n    padding: 20\n  }), withCustomTheme]\n};\nexport const Autocomplete = () => <AutocompleteContainer />;\nAutocomplete.parameters = {\n  ...Autocomplete.parameters,\n  storySource: {\n    source: \"() => <AutocompleteContainer />\",\n    ...Autocomplete.parameters?.storySource\n  }\n};"],"names":["Autocomplete","props","value","setValue","useState","suggestion","setSuggestion","onTextInput","evt","value2","reg","reg2","it","v","onItemClick","renderList","jsx","style","item","jsxs","array","AutocompleteContainer","useBGColor","Autocomplete_story","withCenteredStyle","withCustomTheme","_a"],"mappings":"kYAQAA,EAAAC,GAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,CAAA,CAAA,EAEAG,EAAAC,GAAA,CACE,MAAAC,EAAAD,EAAA,OAAA,MAEA,GADAL,EAAAM,CAAA,EACAA,EAAA,OAAA,EAAA,CACE,MAAAC,EAAA,IAAA,OAAA,IAAAD,IAAA,GAAA,EACAE,EAAA,IAAA,OAAA,IAAAF,KAAA,GAAA,EACAG,EAAAX,EAAA,MAAA,OAAAY,GAAAH,EAAA,KAAAG,CAAA,CAAA,EAAA,OAAAA,GAAA,CAAAF,EAAA,KAAAE,CAAA,CAAA,EAGAP,EAAAM,CAAA,CAAgB,MAEhBN,EAAA,CAAA,CAAA,CACF,EAGFQ,EAAAL,GAAA,GAAA,CACE,EAAA,eAAA,EACAN,EAAAM,CAAA,EACAH,EAAA,CAAA,CAAA,CAAgB,EAGlBS,EAAA,IACEV,EAAA,SAAA,EACE,KAGFW,MAAA,KAAA,CAAA,UAAAC,EAAA,KAAA,SAAAZ,EAAA,IAAAa,GAAAF,EAAAA,IAAA,KAAA,CAAA,UAAAC,EAAA,KAAA,QAAAH,EAAAI,CAAA,EAAA,SAAAA,CAAA,EAAAA,CAAA,CAAA,CAAA,CAAA,EAWF,OAAAC,EAAAA,KAAA,MAAA,CAAA,UAAAF,EAAA,QAAA,SAAA,CAEID,EAAA,IAAA,QAAC,CAAA,KAAA,OACM,UAAAC,EAAA,MACY,SAAAV,EACP,MAAAL,CACV,CAAA,EACFa,EAAA,CACY,CAAA,CAAA,CAGlB,sMC5DA,MAAAK,EAAemML,MAAM;AAAA,CAAI,EC5LPC,EAAwB,KACxBC,EAAA,IAAK,IAAK,GAAG,EAEjBN,EAAA,IAAChB,EAAa,CAAA,MAAOoB,CAAO,CAAA,GCPtBG,EAAA,CACb,MAAO,sBACP,WAAY,CAACC,EAAkB,CAC7B,MAAO,IACP,UAAW,aACX,QAAS,EACV,CAAA,EAAGC,CAAe,CACrB,EACazB,EAAe,IAAMgB,EAAAA,IAACK,EAAsB,EAAA,QACzDrB,EAAa,WAAa,CACxB,GAAGA,EAAa,WAChB,YAAa,CACX,OAAQ,kCACR,IAAG0B,EAAA1B,EAAa,aAAb,YAAA0B,EAAyB,WAC9B,CACF"}