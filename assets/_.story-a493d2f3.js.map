{"version":3,"file":"_.story-a493d2f3.js","sources":["../../src/components/native/CircleBar/ProgressRing/index.tsx","../../src/components/native/CircleBar/Result/Slider.tsx","../../src/components/native/CircleBar/Result/Presenter.tsx","../../src/components/native/CircleBar/Result/index.tsx","../../src/components/native/CircleBar/index.tsx","../../src/components/native/CircleBar/_.story.tsx"],"sourcesContent":["import React, { useRef, PropsWithChildren, MouseEvent, useMemo } from 'react'\r\n\r\nexport interface RingProps {\r\n  radius: number\r\n  stroke: number\r\n  progress: number\r\n  onRingClick: (arg: number) => void\r\n}\r\n\r\nexport const Ring = (props: PropsWithChildren<RingProps>) => {\r\n  const { radius, stroke, progress, onRingClick, children } = props\r\n\r\n  const myRef = useRef(null)\r\n\r\n  const onKeyDown = (evt: any) => {\r\n    // const now = Date.now()\r\n    // if (now - this.time < 100) return\r\n    if (evt.keyCode === 38 || evt.keyCode === 39) {\r\n      const result = progress <= 95 ? progress + 5 : 100\r\n      onRingClick(result)\r\n    }\r\n    if (evt.keyCode === 37 || evt.keyCode === 40) {\r\n      const result = progress >= 5 ? progress - 5 : 0\r\n      onRingClick(result)\r\n    }\r\n    // this.time = now\r\n  }\r\n\r\n  const changeValue = (evt: any) => {\r\n    evt.preventDefault()\r\n\r\n    const el = myRef.current\r\n\r\n    if (!el) {\r\n      return\r\n    }\r\n\r\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = el\r\n    const centerY = offsetTop + offsetHeight / 2\r\n    const centerX = offsetLeft + offsetWidth / 2\r\n    const action = onRingClick\r\n\r\n    calculate(evt)\r\n\r\n    document.addEventListener('mousemove', onMouseMove)\r\n    document.addEventListener('mouseup', onMouseUp)\r\n\r\n    function onMouseUp(evt: any) {\r\n      document.removeEventListener('mousemove', onMouseMove)\r\n      document.removeEventListener('mouseup', onMouseUp)\r\n      calculate(evt)\r\n    }\r\n\r\n    function onMouseMove(evt: any) {\r\n      const { clientX, clientY } = evt\r\n      const x = clientX - centerX\r\n      const y = -clientY + centerY\r\n      const fi = (Math.atan2(x, y) * 50) / Math.PI\r\n      const result = Math.ceil(fi < 0 ? fi + 100 : fi)\r\n      action(result)\r\n    }\r\n\r\n    function calculate(evt: any) {\r\n      const { clientX, clientY } = evt\r\n      const x = clientX - centerX\r\n      const y = -clientY + centerY\r\n      const fi = (Math.atan2(x, y) * 50) / Math.PI\r\n      const result = Math.ceil(fi < 0 ? fi + 100 : fi)\r\n      action(result)\r\n    }\r\n  }\r\n\r\n  const stopProp = (evt: MouseEvent) => {\r\n    evt.stopPropagation()\r\n    const result = progress > 50 ? 0 : 100\r\n    onRingClick(result)\r\n  }\r\n\r\n  const container_style = {\r\n    width: 2 * radius * 0.99,\r\n    height: 2 * radius * 0.99,\r\n  }\r\n  const inner_style = {\r\n    width: 2 * (radius - stroke) * 1.05,\r\n    height: 2 * (radius - stroke) * 1.05,\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='circle-bar__container'\r\n      onMouseDown={changeValue}\r\n      onKeyDown={onKeyDown}\r\n      ref={myRef}\r\n      style={container_style}\r\n      tabIndex={0}\r\n    >\r\n      <ProgressRing radius={radius} stroke={stroke} progress={progress} />\r\n      <div\r\n        className='circle-bar__inner'\r\n        style={inner_style}\r\n        onMouseDown={stopProp}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ProgressRingProps {\r\n  radius: number\r\n  stroke: number\r\n  progress: number\r\n}\r\n\r\nconst ProgressRing = (props: ProgressRingProps) => {\r\n  const { radius, stroke, progress } = props\r\n\r\n  const [circumference, normalizedRadius] = useMemo(() => {\r\n    const normalizedRadius = radius - stroke / 2\r\n    const circumference = normalizedRadius * 2 * Math.PI\r\n    return [circumference, normalizedRadius]\r\n  }, [radius, stroke])\r\n\r\n  const strokeDashoffset = circumference - (progress / 100) * circumference\r\n\r\n  return (\r\n    <svg className='circle-bar__svg' height={radius * 2} width={radius * 2}>\r\n      <linearGradient id='gradient1'>\r\n        <stop id='stop1' offset='0%' stopColor='black' stopOpacity='1' />\r\n        <stop id='stop2' offset='100%' stopColor='green' />\r\n      </linearGradient>\r\n\r\n      <linearGradient\r\n        id='gradient2'\r\n        x1='0'\r\n        x2='0'\r\n        y1='0'\r\n        y2='1'\r\n        xlinkHref='#gradient1'\r\n      />\r\n\r\n      <circle\r\n        stroke='url(#gradient1)'\r\n        fill='transparent'\r\n        strokeWidth={stroke}\r\n        strokeDasharray={circumference + ' ' + circumference}\r\n        style={{ strokeDashoffset }}\r\n        r={normalizedRadius}\r\n        cx={radius}\r\n        cy={radius}\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Ring\r\n","import React, { useContext } from 'react'\r\n\r\nimport './style.scss'\r\nimport { Ctx } from './index'\r\n\r\nconst numbers = []\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n  numbers.push(i)\r\n}\r\n\r\ninterface SliderProps {\r\n  kee: string\r\n}\r\n\r\nconst Slider = (props: SliderProps) => {\r\n  const { kee } = props\r\n\r\n  const ctx = useContext(Ctx)\r\n  const { charDict, numDict } = ctx\r\n\r\n  const number = charDict[kee] || numDict[kee]\r\n\r\n  return (\r\n    <ul\r\n      className='result__slider list'\r\n      style={{ transform: `translateY(-${number * 80}px)` }}\r\n    >\r\n      {Object.keys(numDict).map((key) => (\r\n        <li key={key} className='result__slide result__slide--num'>\r\n          {key}\r\n        </li>\r\n      ))}\r\n\r\n      {Object.keys(charDict).map((key) => (\r\n        <li key={key} className='result__slide result__slide--char'>\r\n          {key}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Slider\r\n","import React from 'react'\r\nimport './style.scss'\r\n\r\nimport Slider from './Slider'\r\n\r\ninterface PresenterProps {\r\n  array: string[]\r\n}\r\n\r\nconst Presenter = (props: PresenterProps) => {\r\n  const { array } = props\r\n\r\n  return (\r\n    <ul className='result list'>\r\n      {array.map((key, index) => (\r\n        <li key={index} className='result__item'>\r\n          <Slider kee={key} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Presenter\r\n","import React from 'react'\r\nimport './style.scss'\r\n\r\nimport Presenter from './Presenter'\r\n\r\nconst charDict = {\r\n  A: 11,\r\n  X: 12,\r\n  M: 13,\r\n  ' ': 14,\r\n  I: 15,\r\n  N: 16,\r\n}\r\n\r\nconst numDict = {\r\n  '0': 0,\r\n  '1': 1,\r\n  '2': 2,\r\n  '3': 3,\r\n  '4': 4,\r\n  '5': 5,\r\n  '6': 6,\r\n  '7': 7,\r\n  '8': 8,\r\n  '9': 9,\r\n  '%': 10,\r\n}\r\n\r\nconst CtxValue = {\r\n  charDict,\r\n  numDict,\r\n}\r\n\r\ninterface CtxModel {\r\n  charDict: Record<string, number>\r\n  numDict: Record<string, number>\r\n}\r\n\r\nexport const Ctx = React.createContext<CtxModel>(CtxValue)\r\n\r\ninterface ResultProps {\r\n  progress: number\r\n}\r\n\r\nconst Result = (props: ResultProps) => {\r\n  const { progress } = props\r\n\r\n  const array =\r\n    progress <= 0\r\n      ? ['M', 'I', 'N']\r\n      : progress >= 100\r\n      ? ['M', 'A', 'X']\r\n      : progress.toString().split('')\r\n\r\n  while (array.length < 3) {\r\n    array.unshift(' ')\r\n  }\r\n\r\n  if (array[0] === 'M') {\r\n    array.push(' ')\r\n  } else {\r\n    array.push('%')\r\n  }\r\n\r\n  return (\r\n    <Ctx.Provider value={CtxValue}>\r\n      <Presenter array={array} />\r\n    </Ctx.Provider>\r\n  )\r\n}\r\n\r\nexport default Result\r\n","import React, { useState } from 'react'\r\n\r\nimport useBGColor from '~/hook/useBgColor'\r\n\r\nimport Ring from './ProgressRing'\r\nimport Result from './Result'\r\n\r\nimport './style.scss'\r\n\r\nexport const CircleBar = () => {\r\n  const [progress, setProgress] = useState(100)\r\n\r\n  useBGColor(223, 211, 251)\r\n\r\n  const onRingClick = (value: number) => setProgress(value)\r\n\r\n  return (\r\n    <div className='circle-bar'>\r\n      <Ring\r\n        radius={200}\r\n        stroke={30}\r\n        progress={progress}\r\n        onRingClick={onRingClick}\r\n      >\r\n        <Result progress={progress} />\r\n      </Ring>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CircleBar\r\n","import { ComponentStory } from '@storybook/react';\nimport { withCenteredStyle } from '~/_storybook/withCenteredStyle';\nimport { withCustomTheme } from '~/_storybook/withCustomTheme';\nimport { Ring } from './ProgressRing';\nimport Result from './Result';\nimport { CircleBar } from '.';\nexport default {\n  title: 'Native/Circle Bar',\n  decorators: [withCenteredStyle({\n    width: 500\n  }), withCustomTheme]\n};\nexport const _CircleBar = () => <CircleBar />;\nconst Template: ComponentStory<typeof Result> = props => <Result {...props} />;\nexport const _Result = Template.bind({});\n_Result.args = {\n  progress: 0\n};\n_Result.argTypes = {\n  progress: {\n    control: {\n      type: 'range',\n      min: -10,\n      max: 110,\n      step: 1\n    }\n  }\n};\nconst Template1: ComponentStory<typeof Ring> = props => <Ring {...props} />;\nexport const _Ring = Template1.bind({});\n_Ring.args = {\n  progress: 0,\n  radius: 200,\n  stroke: 30\n};\n_Ring.argTypes = {\n  onRingClick: {\n    action: 'onRingClick'\n  }\n};\n_CircleBar.parameters = {\n  ..._CircleBar.parameters,\n  storySource: {\n    source: \"() => <CircleBar />\",\n    ..._CircleBar.parameters?.storySource\n  }\n};\n_Result.parameters = {\n  ..._Result.parameters,\n  storySource: {\n    source: \"props => <Result {...props} />\",\n    ..._Result.parameters?.storySource\n  }\n};\n_Ring.parameters = {\n  ..._Ring.parameters,\n  storySource: {\n    source: \"props => <Ring {...props} />\",\n    ..._Ring.parameters?.storySource\n  }\n};"],"names":["Ring","props","radius","stroke","progress","onRingClick","children","myRef","useRef","onKeyDown","evt","result","changeValue","el","offsetTop","offsetLeft","offsetWidth","offsetHeight","centerY","centerX","action","calculate","onMouseMove","onMouseUp","evt2","clientX","clientY","x","y","fi","stopProp","container_style","inner_style","jsxs","jsx","ProgressRing","circumference","normalizedRadius","useMemo","normalizedRadius2","strokeDashoffset","Slider","kee","ctx","useContext","Ctx","charDict","numDict","number","key","Presenter","array","index","CtxValue","React","Result","CircleBar","setProgress","useState","useBGColor","value","__story","withCenteredStyle","withCustomTheme","_CircleBar","Template","_Result","Template1","_Ring","_a"],"mappings":"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"}