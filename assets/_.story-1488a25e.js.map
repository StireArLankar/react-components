{"version":3,"file":"_.story-1488a25e.js","sources":["../../src/components/design/CustomSelectV2/arrow.svg","../../src/components/design/CustomSelectV2/multi.tsx","../../src/components/design/CustomSelectV2/index.tsx","../../src/components/design/CustomSelectV2/_.story.tsx"],"sourcesContent":["export default \"__VITE_ASSET__cf45d1c9__\"","import React, { ReactNode, useRef } from 'react'\r\nimport { useLayer } from 'react-laag'\r\nimport { RemoveScroll } from 'react-remove-scroll'\r\n\r\nimport { animated, useSpring } from '@react-spring/web'\r\nimport { useMultipleSelection, useSelect } from 'downshift'\r\n\r\nimport Checkbox from '../Checkbox'\r\n\r\nimport classes from './_classes.css'\r\nimport { ReactComponent as Arrow } from './arrow.svg'\r\n\r\nexport interface ComboboxProps {\r\n  values: string[]\r\n  items: { value: string; label: ReactNode }[]\r\n  onChange: (val: string[]) => void\r\n  variant?: 'primary' | 'secondary'\r\n  fit?: boolean\r\n  unstyled?: boolean\r\n  disabled?: boolean\r\n  fixedContainer?: boolean\r\n  layerWidth?: number\r\n}\r\n\r\ntype ArrayElement<T extends any[]> = T extends readonly (infer R)[] ? R : never\r\n\r\nconst itemToString = (item: { value: string; label: ReactNode } | null) =>\r\n  item ? item.value : ''\r\n\r\n/**\r\n * @example\r\n * 0 -> -10 --- 100 -> 110\r\n */\r\nconst t = (val: number) => val * 1.2 - 10\r\n/**\r\n * @example\r\n * 0 -> 110 --- 100 -> -10\r\n */\r\nconst t1 = (val: number) => t(100 - val)\r\n\r\nconst clipFromTop = (val: number) =>\r\n  `polygon(-10% -10%, 110% -10%, 110% ${t(val)}%, -10% ${t(val)}%)`\r\n\r\nconst clipFromBottom = (val: number) =>\r\n  `polygon(-10% ${t1(val)}%, 110% ${t1(val)}%, 110% 110%, -10% 110%)`\r\n\r\nexport const Combobox = (props: ComboboxProps) => {\r\n  const { items, onChange, values, fixedContainer } = props\r\n\r\n  const {\r\n    addSelectedItem,\r\n    selectedItems,\r\n    removeSelectedItem,\r\n    getDropdownProps,\r\n  } = useMultipleSelection({\r\n    selectedItems: items.filter((item) => values.includes(item.value)),\r\n    onSelectedItemsChange: (ch) => {\r\n      const vals = ch.selectedItems?.map((item) => item.value) || []\r\n      onChange(vals)\r\n    },\r\n  })\r\n\r\n  const isSelected = (item: ArrayElement<typeof items>) =>\r\n    selectedItems.includes(item)\r\n\r\n  const {\r\n    isOpen,\r\n    getToggleButtonProps,\r\n    getMenuProps,\r\n    getItemProps,\r\n    highlightedIndex,\r\n  } = useSelect({\r\n    items: items,\r\n    circularNavigation: true,\r\n    itemToString: itemToString,\r\n    stateReducer: (state, actionAndChanges) => {\r\n      const { changes, type } = actionAndChanges\r\n      const { selectedItem } = changes\r\n      switch (type) {\r\n        case useSelect.stateChangeTypes.MenuKeyDownEnter:\r\n        case useSelect.stateChangeTypes.MenuKeyDownSpaceButton:\r\n        case useSelect.stateChangeTypes.ItemClick:\r\n          if (selectedItem) {\r\n            if (values.includes(selectedItem?.value ?? '')) {\r\n              removeSelectedItem(selectedItem)\r\n            } else {\r\n              addSelectedItem(selectedItem)\r\n            }\r\n          }\r\n      }\r\n\r\n      switch (type) {\r\n        case useSelect.stateChangeTypes.MenuKeyDownEnter:\r\n        case useSelect.stateChangeTypes.MenuKeyDownSpaceButton:\r\n        case useSelect.stateChangeTypes.ItemClick:\r\n          return {\r\n            ...changes,\r\n            highlightedIndex: state.highlightedIndex,\r\n            isOpen: true, // keep the menu open after selection.\r\n          }\r\n      }\r\n\r\n      return changes\r\n    },\r\n  })\r\n\r\n  const ref = useRef<HTMLDivElement>(null)\r\n\r\n  const { renderLayer, triggerProps, layerProps, triggerBounds, layerSide } =\r\n    useLayer({\r\n      container: fixedContainer ? undefined : ref.current ?? undefined,\r\n      isOpen: true,\r\n      overflowContainer: true,\r\n      placement: 'bottom-center',\r\n      auto: true,\r\n      triggerOffset: 9,\r\n      possiblePlacements: ['bottom-center', 'top-center'],\r\n      snap: true,\r\n    })\r\n\r\n  const refWidth = useRef(triggerBounds?.width)\r\n\r\n  if (triggerBounds?.width) {\r\n    refWidth.current = triggerBounds?.width\r\n  }\r\n\r\n  const anim = useSpring<{ c: number }>({ c: isOpen ? 100 : 0 })\r\n\r\n  const renderLabel = () => {\r\n    switch (true) {\r\n      case selectedItems.length === 0:\r\n        return 'NONE'\r\n      case selectedItems.length === 1:\r\n        return selectedItems[0].label\r\n      default:\r\n        return 'MULTIPLE'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div ref={ref} style={{ position: 'relative' }}>\r\n      <button\r\n        type='button'\r\n        {...getToggleButtonProps({\r\n          ...triggerProps,\r\n          disabled: props.disabled,\r\n        })}\r\n        className={classes.label({ fit: props.fit, variant: props.variant })}\r\n        disabled={props.disabled}\r\n      >\r\n        <span {...getDropdownProps()}>{renderLabel()}</span>\r\n        <Arrow\r\n          width='16'\r\n          height='16'\r\n          style={{\r\n            transform: `rotate(${isOpen ? 0 : 180}deg)`,\r\n            transition: 'transform 0.3s ease-in-out',\r\n          }}\r\n        />\r\n      </button>\r\n      {renderLayer(\r\n        <animated.div\r\n          ref={layerProps.ref}\r\n          style={{\r\n            ...layerProps.style,\r\n            width: props.layerWidth ?? refWidth.current,\r\n            clipPath: anim.c.to(\r\n              layerSide === 'top' ? clipFromBottom : clipFromTop\r\n            ),\r\n            pointerEvents: anim.c.to((val) => (val > 50 ? 'auto' : 'none')),\r\n            opacity: anim.c.to((val) => val / 100),\r\n            backgroundColor: 'white',\r\n            borderRadius: 12,\r\n            overflow: 'hidden',\r\n            zIndex: 100,\r\n            outline: 'none',\r\n            boxShadow: '0px 3px 7px rgba(37, 98, 132, 0.4)',\r\n\r\n            transformOrigin:\r\n              layerSide === 'top' ? 'center bottom' : 'center top',\r\n          }}\r\n        >\r\n          <RemoveScroll\r\n            style={{\r\n              maxHeight: Math.min(window.innerHeight / 3, 300),\r\n              overflow: 'auto',\r\n              willChange: 'opacity',\r\n              outline: 'none',\r\n            }}\r\n            enabled={false}\r\n            {...getMenuProps()}\r\n          >\r\n            <ul className={classes.list}>\r\n              {items.map((item, index) => (\r\n                <li\r\n                  key={item.value}\r\n                  className={classes.item({\r\n                    active: highlightedIndex === index,\r\n                  })}\r\n                  {...getItemProps({\r\n                    item,\r\n                    index,\r\n                  })}\r\n                >\r\n                  <Checkbox\r\n                    id={item.value}\r\n                    value={isSelected(item)}\r\n                    color='green'\r\n                  />\r\n                  {item.label}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </RemoveScroll>\r\n        </animated.div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { ReactNode, useMemo, useRef } from 'react'\r\nimport { useLayer } from 'react-laag'\r\nimport { RemoveScroll } from 'react-remove-scroll'\r\n\r\nimport { animated, useSpring } from '@react-spring/web'\r\nimport { useSelect } from 'downshift'\r\n\r\nimport classes from './_classes.css'\r\nimport { ReactComponent as Arrow } from './arrow.svg'\r\n\r\nexport interface SelectProps {\r\n  value: string\r\n  items: { value: string; label: ReactNode }[]\r\n  onChange: (val: string) => void\r\n  variant?: 'primary' | 'secondary'\r\n  fit?: boolean\r\n  disabled?: boolean\r\n  fixedContainer?: boolean\r\n}\r\n\r\nconst itemToString = (item: { value: string; label: ReactNode } | null) =>\r\n  item ? item.value : ''\r\n\r\nconst mobileCheck = () => {\r\n  let check = false\r\n  ;(function (a) {\r\n    if (\r\n      /* eslint-disable-next-line */\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\r\n        a\r\n      ) ||\r\n      /* eslint-disable-next-line */\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n        a.substr(0, 4)\r\n      )\r\n    ) {\r\n      check = true\r\n    }\r\n  })(navigator.userAgent || navigator.vendor || (window as any).opera)\r\n  return check\r\n}\r\n\r\nexport default (props: SelectProps) => {\r\n  const isMobile = mobileCheck()\r\n\r\n  return isMobile ? <Mobile {...props} /> : <Temp {...props} />\r\n}\r\n\r\nconst Mobile = (props: SelectProps) => {\r\n  const label = useMemo((): ReactNode => {\r\n    const temp = props.items.find(({ value }) => value === props.value)\r\n\r\n    if (temp) {\r\n      return temp.label\r\n    }\r\n\r\n    return <div />\r\n  }, [props.items, props.value])\r\n\r\n  const ref = useRef<HTMLSelectElement>(null)\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'flex' }}>\r\n      <select\r\n        className={classes.label({ fit: props.fit, variant: props.variant })}\r\n        value={props.value}\r\n        ref={ref}\r\n        disabled={props.disabled}\r\n        style={{\r\n          opacity: 0,\r\n          position: 'absolute',\r\n          top: 0,\r\n          bottom: 0,\r\n          left: 0,\r\n          right: 0,\r\n        }}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n      >\r\n        {props.items.map((item) => (\r\n          <option value={item.value} key={item.value}>\r\n            {item.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button\r\n        className={classes.label({ fit: props.fit, variant: props.variant })}\r\n        type='button'\r\n        onClick={() => ref.current?.click()}\r\n        style={{\r\n          pointerEvents: 'none',\r\n        }}\r\n      >\r\n        <span>{label}</span>\r\n        <Arrow width='16' height='16' style={{ transform: `rotate(180deg)` }} />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst t = (val: number) => val * 1.2 - 10\r\n\r\nconst clipFromTop = (val: number) =>\r\n  `polygon(-10% -10%, 110% -10%, 110% ${t(val)}%, -10% ${t(val)}%)`\r\n\r\nconst clipFromBottom = (val: number) =>\r\n  `polygon(-10% ${t(100 - val)}%, 110% ${t(100 - val)}%, 110% 110%, -10% 110%)`\r\n\r\nexport const Temp = (props: SelectProps) => {\r\n  const { items, onChange, value, fixedContainer } = props\r\n\r\n  const selected = useMemo(() => {\r\n    return items.find((item) => item.value === value)\r\n  }, [items, value])\r\n\r\n  const {\r\n    isOpen,\r\n    selectedItem,\r\n    getToggleButtonProps,\r\n    getMenuProps,\r\n    getItemProps,\r\n    highlightedIndex,\r\n  } = useSelect({\r\n    items: items,\r\n    circularNavigation: true,\r\n    itemToString: itemToString,\r\n    selectedItem: selected,\r\n    onSelectedItemChange: (val) =>\r\n      val.selectedItem?.value && onChange(val.selectedItem?.value),\r\n  })\r\n\r\n  const ref = useRef<HTMLDivElement>(null)\r\n\r\n  const { renderLayer, triggerProps, layerProps, triggerBounds, layerSide } =\r\n    useLayer({\r\n      container: fixedContainer ? undefined : ref.current ?? undefined,\r\n      isOpen: true,\r\n      overflowContainer: true,\r\n      placement: 'bottom-center',\r\n      auto: true,\r\n      triggerOffset: 9,\r\n      possiblePlacements: ['bottom-center', 'top-center'],\r\n      snap: true,\r\n    })\r\n\r\n  const refWidth = useRef(triggerBounds?.width)\r\n\r\n  if (triggerBounds?.width) {\r\n    refWidth.current = triggerBounds?.width\r\n  }\r\n\r\n  const anim = useSpring({ c: isOpen ? 100 : 0 })\r\n\r\n  const { ref: menuRef, ...menuProps } = getMenuProps()\r\n\r\n  return (\r\n    <div ref={ref} style={{ position: 'relative' }}>\r\n      <button\r\n        type='button'\r\n        {...getToggleButtonProps({\r\n          ...triggerProps,\r\n          disabled: props.disabled,\r\n        })}\r\n        className={classes.label({ fit: props.fit, variant: props.variant })}\r\n        disabled={props.disabled}\r\n      >\r\n        <span>{selectedItem?.label || '--'}</span>\r\n        <Arrow\r\n          width='16'\r\n          height='16'\r\n          style={{\r\n            transform: `rotate(${isOpen ? 0 : 180}deg)`,\r\n            transition: 'transform 0.3s ease-in-out',\r\n          }}\r\n        />\r\n      </button>\r\n      {renderLayer(\r\n        <animated.div\r\n          ref={layerProps.ref}\r\n          style={{\r\n            ...layerProps.style,\r\n            width: refWidth.current,\r\n            clipPath: anim.c.to(\r\n              layerSide === 'top' ? clipFromBottom : clipFromTop\r\n            ),\r\n            pointerEvents: anim.c.to((val) => (val > 50 ? 'auto' : 'none')),\r\n            opacity: anim.c.to((val) => val / 100),\r\n            backgroundColor: 'white',\r\n            borderRadius: 12,\r\n            overflow: 'hidden',\r\n            zIndex: 100,\r\n            outline: 'none',\r\n            boxShadow: '0px 7px 7px rgba(37, 98, 132, 0.4)',\r\n\r\n            transformOrigin:\r\n              layerSide === 'top' ? 'center bottom' : 'center top',\r\n          }}\r\n        >\r\n          <RemoveScroll\r\n            ref={menuRef}\r\n            style={{\r\n              maxHeight: Math.min(window.innerHeight / 3, 300),\r\n              overflow: 'auto',\r\n              willChange: 'opacity',\r\n              outline: 'none',\r\n            }}\r\n            enabled={false}\r\n            {...menuProps}\r\n          >\r\n            <ul className={classes.list}>\r\n              {items.map((item, index) => (\r\n                <li\r\n                  key={item.value}\r\n                  className={classes.item({\r\n                    active: highlightedIndex === index,\r\n                  })}\r\n                  {...getItemProps({\r\n                    item,\r\n                    index,\r\n                  })}\r\n                >\r\n                  {item.label}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </RemoveScroll>\r\n        </animated.div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react';\nimport { withCenteredStyle } from '~/_storybook/withCenteredStyle';\nimport { withCustomTheme } from '~/_storybook/withCustomTheme';\nimport { Combobox } from './multi';\nimport Temp from '.';\nexport default {\n  title: 'Design/CustomSelectV2',\n  decorators: [withCustomTheme, withCenteredStyle({\n    width: '100%',\n    background: 'teal',\n    minHeight: `160vh`,\n    display: 'grid',\n    placeItems: 'center'\n  })]\n};\nconst options = Array.from({\n  length: 100\n}, (_, i) => ({\n  label: `Option ${i}`,\n  value: `${i}`\n}));\nconst Controlled = () => {\n  const [value, setValue] = useState('1');\n  useEffect(() => {\n    document.body.style.padding = '0';\n  }, []);\n  return <div style={{\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, auto)',\n    gridGap: 10,\n    alignItems: 'center'\n  }}>\r\n      <div style={{\n      position: 'fixed',\n      top: 20,\n      margin: '0 auto',\n      left: '50%',\n      transform: 'translate(-50%)'\n    }}>\r\n        <Temp value={value} onChange={setValue} items={options} fixedContainer />\r\n      </div>\r\n\r\n      <a href='#11'>for accessible</a>\r\n      <Temp value={value} onChange={setValue} items={options} />\r\n\r\n      <a href='#11'>for accessible</a>\r\n\r\n      <div style={{\n      position: 'fixed',\n      bottom: 20,\n      margin: '0 auto',\n      left: '50%',\n      transform: 'translate(-50%)'\n    }}>\r\n        <Temp value={value} onChange={setValue} items={options} fixedContainer />\r\n      </div>\r\n    </div>;\n};\nexport const ExampleV2 = () => <Controlled />;\nconst items = ['132', '229', '9993', '0934'].map(value => ({\n  value,\n  label: value\n}));\nconst MultiTest = () => {\n  const [values, set] = useState(['']);\n  return <div style={{\n    minWidth: 200\n  }}>\r\n      <Combobox values={values} onChange={set} items={items} />\r\n    </div>;\n};\nexport const Multi = () => <MultiTest />;\nExampleV2.parameters = {\n  ...ExampleV2.parameters,\n  storySource: {\n    source: \"() => <Controlled />\",\n    ...ExampleV2.parameters?.storySource\n  }\n};\nMulti.parameters = {\n  ...Multi.parameters,\n  storySource: {\n    source: \"() => <MultiTest />\",\n    ...Multi.parameters?.storySource\n  }\n};"],"names":["SvgArrow","props","React.createElement","itemToString","item","t","val","t1","clipFromTop","clipFromBottom","Combobox","items","onChange","values","fixedContainer","addSelectedItem","selectedItems","removeSelectedItem","getDropdownProps","useMultipleSelection","ch","vals","_a","isSelected","isOpen","getToggleButtonProps","getMenuProps","getItemProps","highlightedIndex","useSelect","state","actionAndChanges","changes","type","selectedItem","ref","useRef","renderLayer","triggerProps","layerProps","triggerBounds","layerSide","useLayer","refWidth","anim","useSpring","renderLabel","jsxs","classes","jsx","Arrow","animated","RemoveScroll","index","Checkbox","mobileCheck","check","Temp","Mobile","label","useMemo","temp","value","e","selected","_b","menuRef","menuProps","__story","withCustomTheme","withCenteredStyle","options","_","i","Controlled","setValue","useState","useEffect","ExampleV2","MultiTest","set","Multi"],"mappings":"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"}