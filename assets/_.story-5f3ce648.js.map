{"version":3,"file":"_.story-5f3ce648.js","sources":["../../src/components/design/Ripple/index.tsx","../../src/components/design/Ripple/_.story.tsx"],"sourcesContent":["import { PropsWithChildren, useState } from 'react'\r\n\r\nimport clsx from 'clsx'\r\n\r\nimport classes, { Variants } from './_classes.css'\r\n\r\nexport type RippleProps = React.DetailedHTMLProps<\r\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n> &\r\n  Variants\r\n\r\nexport const Ripple = (props: PropsWithChildren<RippleProps>) => {\r\n  const { children, onClick, variant, className, ...rest } = props\r\n\r\n  const [ripples, setRipples] = useState<[number, number, number][]>([])\r\n\r\n  const onButtonClick = (e: any) => {\r\n    onClick && onClick(e)\r\n    const x = e.clientX - e.target.offsetLeft\r\n    const y = e.clientY - e.target.offsetTop\r\n\r\n    setRipples((prev) => [...prev, [x, y, Date.now()]])\r\n    setTimeout(() => setRipples((prev) => prev.slice(1)), 1000)\r\n  }\r\n\r\n  const buttonClass = clsx(classes.button({ variant }), className)\r\n\r\n  return (\r\n    <button {...rest} onClick={onButtonClick} className={buttonClass}>\r\n      {ripples.map((ripple) => (\r\n        <span\r\n          key={ripple[2]}\r\n          className={classes.ripple}\r\n          style={{ left: ripple[0], top: ripple[1] }}\r\n        />\r\n      ))}\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Ripple\r\n","import { Meta, StoryObj } from '@storybook/react';\nimport { withCenteredStyle } from '~/_storybook/withCenteredStyle';\nimport { withCustomTheme } from '~/_storybook/withCustomTheme';\nimport { withTopLabel } from '~/_storybook/withTopLabel';\nimport { storyLink } from '~/theme/theme.css';\nimport Component from '.';\nconst label = <>\r\n    <span>Credits to </span>\r\n    <a className={storyLink} href='https://www.youtube.com/watch?v=ueyRcYEmsrI'>\r\n      video\r\n    </a>\r\n  </>;\nconst meta = ({\n  title: 'Design/Ripple',\n  component: Component,\n  decorators: [withCustomTheme, withCenteredStyle({\n    width: '100%'\n  }), withTopLabel(label)],\n  args: {\n    children: 'Hello world'\n  },\n  argTypes: {\n    variant: {\n      control: 'radio',\n      options: ['primary', 'secondary'],\n      defaultValue: 'primary'\n    }\n  }\n} satisfies Meta<typeof Component>);\nexport default meta;\ntype Story = StoryObj<typeof meta>;\nexport const Ripple: Story = {};\nRipple.parameters = {\n  ...Ripple.parameters,\n  storySource: {\n    source: \"{}\",\n    ...Ripple.parameters?.storySource\n  }\n};"],"names":["Ripple","props","children","onClick","variant","className","rest","ripples","setRipples","useState","onButtonClick","e","x","y","prev","buttonClass","clsx","classes","jsxs","ripple","jsx","label","Fragment","storyLink","meta","Component","withCustomTheme","withCenteredStyle","withTopLabel","_a"],"mappings":"+mBAYOA,EAAAC,GAAA,CACL,KAAA,CAAA,SAAAC,EAAA,QAAAC,EAAA,QAAAC,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAL,EAEA,CAAAM,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,CAAA,EAEAC,EAAAC,GAAA,CACER,GAAAA,EAAAQ,CAAA,EACA,MAAAC,EAAAD,EAAA,QAAAA,EAAA,OAAA,WACAE,EAAAF,EAAA,QAAAA,EAAA,OAAA,UAEAH,EAAAM,GAAA,CAAA,GAAAA,EAAA,CAAAF,EAAAC,EAAA,KAAA,IAAA,CAAA,CAAA,CAAA,EACA,WAAA,IAAAL,EAAAM,GAAAA,EAAA,MAAA,CAAA,CAAA,EAAA,GAAA,CAA0D,EAG5DC,EAAAC,EAAAC,EAAA,OAAA,CAAA,QAAAb,CAAA,CAAA,EAAAC,CAAA,EAEA,OAAAa,EAAA,KAAA,SAAA,CAAA,GAAAZ,EAAA,QAAAI,EAAA,UAAAK,EAAA,SAAA,CAEKR,EAAA,IAAAY,GAAAC,EAAA,IACC,OAAC,CAAA,UAAAH,EAAA,OAEoB,MAAA,CAAA,KAAAE,EAAA,CAAA,EAAA,IAAAA,EAAA,CAAA,CAAA,CACsB,EAAAA,EAAA,CAAA,CAF5B,CAAA,EAIhBjB,CACA,CAAA,CAAA,CAGP,4OClCA,MAAMmB,EACFH,EAAA,KAAAI,WAAA,CAAA,SAAA,CAAAF,EAAAA,IAAC,QAAK,SAAW,aAAA,CAAA,QAChB,IAAE,CAAA,UAAWG,EAAW,KAAK,8CAA8C,SAE5E,QAAA,CAAA,CACF,CAAA,EACIC,EAAQ,CACZ,MAAO,gBACP,UAAWC,EACX,WAAY,CAACC,EAAiBC,EAAkB,CAC9C,MAAO,MAAA,CACR,EAAGC,EAAaP,CAAK,CAAC,EACvB,KAAM,CACJ,SAAU,aACZ,EACA,SAAU,CACR,QAAS,CACP,QAAS,QACT,QAAS,CAAC,UAAW,WAAW,EAChC,aAAc,SAChB,CACF,CACF,EAGarB,EAAgB,CAAC,QAC9BA,EAAO,WAAa,CAClB,GAAGA,EAAO,WACV,YAAa,CACX,OAAQ,KACR,IAAG6B,EAAA7B,EAAO,aAAP,YAAA6B,EAAmB,WACxB,CACF"}