{"version":3,"file":"Header.story-863d0a95.js","sources":["../../src/components/native/Header/index.tsx","../../src/components/native/Header/Header.story.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport clsx from 'clsx'\r\n\r\nimport classes from './header.module.scss'\r\n\r\nexport interface HeaderProps {\r\n  items: LinkItem[]\r\n}\r\n\r\ninterface LinkItem {\r\n  path: string\r\n  component: () => JSX.Element\r\n  title: string\r\n  exact?: boolean\r\n}\r\n\r\nexport const Header = (props: HeaderProps) => {\r\n  const { items } = props\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const toggleMenu = () => setIsOpen((prev) => !prev)\r\n  const closeMenu = () => setIsOpen(false)\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.body.classList.add('overflow')\r\n    } else {\r\n      document.body.classList.remove('overflow')\r\n    }\r\n  }, [isOpen])\r\n\r\n  const renderLinks = () =>\r\n    items.map((item) => (\r\n      <li key={item.title} className={classes.item}>\r\n        <a href={item.path} className={classes.link} onClick={closeMenu}>\r\n          {item.title}\r\n        </a>\r\n      </li>\r\n    ))\r\n\r\n  const navClass = clsx({\r\n    [classes.nav]: true,\r\n    [classes.open]: isOpen,\r\n  })\r\n\r\n  const listClass = clsx({\r\n    [classes.list]: true,\r\n    [classes.open]: isOpen,\r\n    'custom-scroll': true,\r\n  })\r\n\r\n  return (\r\n    <header className={classes.wrapper}>\r\n      <nav className={navClass}>\r\n        <div className={classes.btnWrapper}>\r\n          <button className={classes.toggler} onClick={toggleMenu}>\r\n            Menu\r\n          </button>\r\n        </div>\r\n        <ul className={listClass}>{renderLinks()}</ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport { withCenteredStyle } from '~/_storybook/withCenteredStyle';\nimport { withCustomTheme } from '~/_storybook/withCustomTheme';\nimport { Header, HeaderProps } from '.';\nexport default {\n  title: 'Native/Header With Sidebar',\n  decorators: [withCenteredStyle({\n    width: '100%',\n    padding: 20\n  }), withCustomTheme]\n};\nexport const Example = () => {\n  const props: HeaderProps = {\n    items: [{\n      path: '/',\n      component: () => <div />,\n      title: 'Home',\n      exact: true\n    }, {\n      path: '/pagination',\n      component: () => <div />,\n      title: 'Pagination'\n    }, {\n      path: '/intersection',\n      component: () => <div />,\n      title: 'Intersection'\n    }, {\n      path: '/slider-one',\n      component: () => <div />,\n      title: 'Slider One'\n    }, {\n      path: '/form-fields',\n      component: () => <div />,\n      title: 'Form Fields'\n    }, {\n      path: '/color',\n      component: () => <div />,\n      title: 'Color'\n    }, {\n      path: '/select',\n      component: () => <div />,\n      title: 'Select'\n    }, {\n      path: '/dnd-sorting',\n      component: () => <div />,\n      title: 'DndSorting'\n    }, {\n      path: '/lense',\n      component: () => <div />,\n      title: 'Lense'\n    }, {\n      path: '/autocomplete',\n      component: () => <div />,\n      title: 'Autocomplete'\n    }, {\n      path: '/slider-two',\n      component: () => <div />,\n      title: 'Slider Two'\n    }, {\n      path: '/circle-bar',\n      component: () => <div />,\n      title: 'Circle bar'\n    }, {\n      path: '/spring/accordion',\n      component: () => <div />,\n      title: 'Accordion'\n    }, {\n      path: '/spring/toggle',\n      component: () => <div />,\n      title: 'Toggle'\n    }]\n  };\n  return <Header {...props} />;\n};\nExample.parameters = {\n  ...Example.parameters,\n  storySource: {\n    source: \"() => {\\n  const props: HeaderProps = {\\n    items: [{\\n      path: '/',\\n      component: () => <div />,\\n      title: 'Home',\\n      exact: true\\n    }, {\\n      path: '/pagination',\\n      component: () => <div />,\\n      title: 'Pagination'\\n    }, {\\n      path: '/intersection',\\n      component: () => <div />,\\n      title: 'Intersection'\\n    }, {\\n      path: '/slider-one',\\n      component: () => <div />,\\n      title: 'Slider One'\\n    }, {\\n      path: '/form-fields',\\n      component: () => <div />,\\n      title: 'Form Fields'\\n    }, {\\n      path: '/color',\\n      component: () => <div />,\\n      title: 'Color'\\n    }, {\\n      path: '/select',\\n      component: () => <div />,\\n      title: 'Select'\\n    }, {\\n      path: '/dnd-sorting',\\n      component: () => <div />,\\n      title: 'DndSorting'\\n    }, {\\n      path: '/lense',\\n      component: () => <div />,\\n      title: 'Lense'\\n    }, {\\n      path: '/autocomplete',\\n      component: () => <div />,\\n      title: 'Autocomplete'\\n    }, {\\n      path: '/slider-two',\\n      component: () => <div />,\\n      title: 'Slider Two'\\n    }, {\\n      path: '/circle-bar',\\n      component: () => <div />,\\n      title: 'Circle bar'\\n    }, {\\n      path: '/spring/accordion',\\n      component: () => <div />,\\n      title: 'Accordion'\\n    }, {\\n      path: '/spring/toggle',\\n      component: () => <div />,\\n      title: 'Toggle'\\n    }]\\n  };\\n  return <Header {...props} />;\\n}\",\n    ...Example.parameters?.storySource\n  }\n};"],"names":["Header","props","items","isOpen","setIsOpen","useState","toggleMenu","prev","closeMenu","useEffect","renderLinks","item","jsx","classes","navClass","clsx","listClass","jsxs","Header_story","withCenteredStyle","withCustomTheme","Example","_a"],"mappings":"mfAiBOA,EAAAC,GAAA,CACL,KAAA,CAAA,MAAAC,CAAA,EAAAD,EAEA,CAAAE,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEAC,EAAA,IAAAF,EAAAG,GAAA,CAAAA,CAAA,EACAC,EAAA,IAAAJ,EAAA,EAAA,EAEAK,EAAAA,UAAA,IAAA,CACEN,EACE,SAAA,KAAA,UAAA,IAAA,UAAA,EAEA,SAAA,KAAA,UAAA,OAAA,UAAA,CACF,EAAA,CAAAA,CAAA,CAAA,EAGF,MAAAO,EAAA,IAAAR,EAAA,IAAAS,GAAAC,EAAA,IAAA,KAAA,CAAA,UAAAC,EAAA,KAAA,SAAAD,EAAAA,IAAA,IAAA,CAAA,KAAAD,EAAA,KAAA,UAAAE,EAAA,KAAA,QAAAL,EAAA,SAAAG,EAAA,KAAA,CAAA,CAAA,EAAAA,EAAA,KAAA,CAAA,EASAG,EAAAC,EAAA,CAAsB,CAAAF,EAAA,GAAA,EAAA,GACL,CAAAA,EAAA,IAAA,EAAAV,CACC,CAAA,EAGlBa,EAAAD,EAAA,CAAuB,CAAAF,EAAA,IAAA,EAAA,GACL,CAAAA,EAAA,IAAA,EAAAV,EACA,gBAAA,EACC,CAAA,EAGnB,OAAAS,EAAA,IAAA,SAAA,CAAA,UAAAC,EAAA,QAAA,SAAAI,EAAAA,KAAA,MAAA,CAAA,UAAAH,EAAA,SAAA,CAGMF,EAAA,IAAA,MAAA,CAAA,UAAAC,EAAA,WAAA,SAAAD,EAAAA,IAAA,SAAA,CAAA,UAAAC,EAAA,QAAA,QAAAP,EAAA,SAAA,MAAA,CAAA,EAAA,EAIAM,EAAA,IAAA,KAAA,CAAA,UAAAI,EAAA,SAAAN,EAAA,EAAA,CACyC,CAAA,CAAA,CAAA,CAAA,CAIjD,4LC7DA,MAAeQ,EAAA,CACb,MAAO,6BACP,WAAY,CAACC,EAAkB,CAC7B,MAAO,OACP,QAAS,EACV,CAAA,EAAGC,CAAe,CACrB,EACaC,EAAU,IAAM,CAC3B,MAAMpB,EAAqB,CACzB,MAAO,CAAC,CACN,KAAM,IACN,UAAW,IAAMW,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,OACP,MAAO,EAAA,EACN,CACD,KAAM,cACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,YAAA,EACN,CACD,KAAM,gBACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,cAAA,EACN,CACD,KAAM,cACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,YAAA,EACN,CACD,KAAM,eACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,aAAA,EACN,CACD,KAAM,SACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,OAAA,EACN,CACD,KAAM,UACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,QAAA,EACN,CACD,KAAM,eACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,YAAA,EACN,CACD,KAAM,SACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,OAAA,EACN,CACD,KAAM,gBACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,cAAA,EACN,CACD,KAAM,cACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,YAAA,EACN,CACD,KAAM,cACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,YAAA,EACN,CACD,KAAM,oBACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,WAAA,EACN,CACD,KAAM,iBACN,UAAW,IAAMA,EAAAA,IAAC,MAAI,EAAA,EACtB,MAAO,QAAA,CACR,CAAA,EAEI,OAAAA,EAAA,IAACZ,EAAQ,CAAA,GAAGC,CAAO,CAAA,CAC5B,QACAoB,EAAQ,WAAa,CACnB,GAAGA,EAAQ,WACX,YAAa,CACX,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACR,IAAGC,EAAAD,EAAQ,aAAR,YAAAC,EAAoB,WACzB,CACF"}