function s(n){var t=n.match(/^var\((.*)\)$/);return t?t[1]:n}function g(n,t){var e=n;for(var o of t){if(!(o in e))throw new Error("Path ".concat(t.join(" -> ")," does not exist in object"));e=e[o]}return e}function f(n,t){var e=arguments.length>2&&arguments[2]!==void 0?arguments[2]:[],o=n.constructor();for(var i in n){var r=n[i],a=[...e,i];typeof r=="string"||typeof r=="number"||r==null?o[i]=t(r,a):typeof r=="object"&&!Array.isArray(r)?o[i]=f(r,t,a):console.warn('Skipping invalid key "'.concat(a.join("."),'". Should be a string, number, null or object. Received: "').concat(Array.isArray(r)?"Array":typeof r,'"'))}return o}function l(n,t){var e={};if(typeof t=="object"){var o=n;f(t,(a,c)=>{var u=g(o,c);e[s(u)]=String(a)})}else{var i=n;for(var r in i)e[s(r)]=i[r]}return Object.defineProperty(e,"toString",{value:function(){return Object.keys(this).map(c=>"".concat(c,":").concat(this[c])).join(";")},writable:!1}),e}export{l as a};
//# sourceMappingURL=vanilla-extract-dynamic.esm-c334c93f.js.map
