{"version":3,"file":"_.story-13f3957f.js","sources":["../../src/components/spring/FlipCard/FlipCardScaled.tsx","../../src/components/spring/FlipCard/close.svg","../../src/components/spring/FlipCard/info.svg","../../src/components/spring/FlipCard/index.tsx","../../src/components/spring/FlipCard/_.story.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nimport { useSpring, animated } from '@react-spring/web'\r\n\r\nimport classes from './_classes.css'\r\n\r\nexport interface FlipCardProps {\r\n  back: JSX.Element\r\n  front: JSX.Element\r\n  active?: boolean\r\n  dir?: dirKeys\r\n}\r\n\r\ntype dirKeys = '+x' | '-x' | '+y' | '-y'\r\n\r\nconst mapper: Record<dirKeys, string> = {\r\n  '+x': 'Y(',\r\n  '-x': 'Y(-',\r\n  '+y': 'X(',\r\n  '-y': 'X(-',\r\n}\r\n\r\nconst initial = { y: 0, z: 0 }\r\n\r\nexport const FlipCardScaled = (props: FlipCardProps) => {\r\n  const { back, front, active, dir = '+x' } = props\r\n\r\n  const [isFlipped, setIsFlipped] = useState(false)\r\n\r\n  const [anim, spring] = useSpring(() => ({\r\n    from: initial,\r\n    to: initial,\r\n    config: (key) =>\r\n      key === 'y'\r\n        ? { tension: 120, friction: 14, clamp: false }\r\n        : { tension: 50, friction: 5, clamp: true },\r\n  }))\r\n\r\n  useEffect(() => {\r\n    if (isFlipped) {\r\n      spring.start({ to: [{ z: 0.5 }, { y: 1, z: 1 }] })\r\n    } else {\r\n      spring.start({ to: initial })\r\n    }\r\n  }, [isFlipped, spring])\r\n\r\n  return (\r\n    <animated.div\r\n      className={classes.wrapper}\r\n      onMouseEnter={() => setIsFlipped(true)}\r\n      onMouseLeave={() => setIsFlipped(false)}\r\n      style={{\r\n        transform: anim.z.to((z: number) => `translate3d(0, 0, ${300 * z}px)`),\r\n      }}\r\n    >\r\n      <animated.div\r\n        className={classes.inner}\r\n        style={{\r\n          transform: anim.y.to((y) => `rotate${mapper[dir]}${180 * y}deg)`),\r\n          boxShadow: anim.z.to(\r\n            (z) => `0px ${15 * z}px ${30 * z}px 0px rgba(0, 0, 0, 0.7)`\r\n          ),\r\n        }}\r\n      >\r\n        <div className={classes.card({ active })}>{front}</div>\r\n        <div\r\n          className={classes.back({ active })}\r\n          style={{ transform: `rotate${mapper[dir]}180deg)` }}\r\n        >\r\n          {back}\r\n        </div>\r\n      </animated.div>\r\n    </animated.div>\r\n  )\r\n}\r\n","export default \"__VITE_ASSET__aaabd9ba__\"","export default \"__VITE_ASSET__98ffb9cc__\"","import { useState } from 'react'\r\n\r\nimport { animated, config, useSpring } from '@react-spring/web'\r\n\r\nimport classes from './_classes.css'\r\nimport { ReactComponent as Close } from './close.svg'\r\nimport { ReactComponent as Info } from './info.svg'\r\n\r\nexport interface FlipCardProps {\r\n  back: JSX.Element\r\n  front: JSX.Element\r\n  active?: boolean\r\n}\r\n\r\nexport const FlipCard = (props: FlipCardProps) => {\r\n  const { back, front, active } = props\r\n\r\n  const [isFlipped, setIsFlipped] = useState(false)\r\n\r\n  const animProps = useSpring({\r\n    transform: `rotateY(${isFlipped ? -180 : 0}deg)`,\r\n    config: config.gentle,\r\n  })\r\n\r\n  const toggleFlipped = () => setIsFlipped((state) => !state)\r\n\r\n  const renderFront = () => (\r\n    <div className={classes.card({ active })}>\r\n      {front}\r\n\r\n      <button className={classes.buttonInfo} onClick={toggleFlipped}>\r\n        <Info className={classes.buttonInfoIcon} />\r\n      </button>\r\n    </div>\r\n  )\r\n\r\n  const renderBack = () => (\r\n    <div className={classes.back({ active })}>\r\n      {back}\r\n\r\n      <button className={classes.buttonInfo} onClick={toggleFlipped}>\r\n        <Close className={classes.buttonInfoIcon} />\r\n      </button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <animated.div className={classes.inner} style={animProps}>\r\n        {renderFront()}\r\n        {renderBack()}\r\n      </animated.div>\r\n    </div>\r\n  )\r\n}\r\n","import { ComponentStory } from '@storybook/react';\nimport { withCenteredStyle } from '~/_storybook/withCenteredStyle';\nimport { withCustomTheme } from '~/_storybook/withCustomTheme';\nimport { FlipCardScaled } from './FlipCardScaled';\nimport { FlipCard } from '.';\nexport default {\n  title: 'Spring/FlipCard',\n  decorators: [withCenteredStyle({\n    width: 200,\n    perspective: 1000\n  }), withCustomTheme]\n};\nexport const Card = () => <FlipCard {...props} />;\nconst front = <div style={{\n  height: 200,\n  width: '100%',\n  backgroundColor: 'black',\n  color: 'white',\n  display: 'grid',\n  placeItems: 'center'\n}}>\r\n    Front\r\n  </div>;\nconst back = <div style={{\n  height: 100,\n  width: '100%',\n  backgroundColor: 'grey',\n  color: 'black',\n  display: 'grid',\n  placeItems: 'center'\n}}>\r\n    Back\r\n  </div>;\nconst props = {\n  front,\n  back\n};\nconst Template1: ComponentStory<typeof FlipCardScaled> = props => <FlipCardScaled {...props} />;\nexport const CardScaled = Template1.bind({});\nCardScaled.argTypes = {\n  dir: {\n    control: 'radio',\n    options: ['+x', '-x', '+y', '-y']\n  }\n};\nCardScaled.args = {\n  ...props,\n  dir: '+x'\n};\nCardScaled.parameters = {\n  controls: {\n    include: ['dir']\n  }\n};\nCard.parameters = {\n  ...Card.parameters,\n  storySource: {\n    source: \"() => <FlipCard {...props} />\",\n    ...Card.parameters?.storySource\n  }\n};\nCardScaled.parameters = {\n  ...CardScaled.parameters,\n  storySource: {\n    source: \"props => <FlipCardScaled {...props} />\",\n    ...CardScaled.parameters?.storySource\n  }\n};"],"names":["mapper","initial","FlipCardScaled","props","back","front","active","dir","isFlipped","setIsFlipped","useState","anim","spring","useSpring","key","useEffect","jsx","animated","classes","z","jsxs","y","SvgClose","React.createElement","SvgInfo","FlipCard","animProps","config","toggleFlipped","state","renderFront","Info","renderBack","Close","__story","withCenteredStyle","withCustomTheme","Card","Template1","CardScaled","_a"],"mappings":"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"}