{"version":3,"file":"_.story-ac2126d9.js","sources":["../../src/components/design/ResponsiveText/helpers.ts","../../src/components/design/ResponsiveText/index.tsx","../../src/components/design/ResponsiveText/_.story.tsx"],"sourcesContent":["type GetTextWidth = { (text: string, font: string): number } & {\r\n  canvas?: HTMLCanvasElement\r\n}\r\n\r\nexport const getTextWidth: GetTextWidth = (text, font) => {\r\n  const canvas =\r\n    getTextWidth.canvas ||\r\n    (getTextWidth.canvas = document.createElement('canvas'))\r\n\r\n  const context = canvas.getContext('2d')\r\n\r\n  if (!context) {\r\n    return 0\r\n  }\r\n\r\n  context.font = font\r\n  const metrics = context.measureText(text)\r\n  return metrics.width\r\n}\r\n","import { memo } from 'react'\r\n\r\nimport classes from './_classes.css'\r\nimport { getTextWidth } from './helpers'\r\n\r\ntype Variants = 'bold' | 'regular'\r\n\r\nexport type ResponsiveTextProps = {\r\n  text: string\r\n  variant?: Variants\r\n}\r\n\r\nconst variantToFont = (variant: Variants): string => {\r\n  switch (variant) {\r\n    case 'bold':\r\n      return 'bold 30px Roboto'\r\n    case 'regular':\r\n      return '30px Roboto'\r\n  }\r\n}\r\n\r\nconst variantToXPadding = (variant: Variants): number => {\r\n  switch (variant) {\r\n    case 'bold':\r\n      return 17\r\n    case 'regular':\r\n      return 12\r\n  }\r\n}\r\n\r\nconst variantToYHeight = (variant: Variants): number => {\r\n  switch (variant) {\r\n    case 'bold':\r\n      return 50\r\n    case 'regular':\r\n      return 42\r\n  }\r\n}\r\n\r\nexport default memo((props: ResponsiveTextProps) => {\r\n  const { text, variant = 'bold' } = props\r\n\r\n  const font = variantToFont(variant)\r\n  const xpad = variantToXPadding(variant)\r\n  const y = variantToYHeight(variant)\r\n\r\n  const width = getTextWidth(text, font) + xpad * 2\r\n\r\n  return (\r\n    <svg\r\n      viewBox={`0 0 ${width} ${y}`}\r\n      style={{ width, background: '#0162c8', fill: 'white' }}\r\n    >\r\n      <text\r\n        x='50%'\r\n        y='50%'\r\n        textAnchor='middle'\r\n        dominantBaseline='central'\r\n        className={classes.font[variant]}\r\n      >\r\n        {text}\r\n      </text>\r\n    </svg>\r\n  )\r\n})\r\n","import { Meta, StoryObj } from '@storybook/react';\nimport { withCenteredStyle } from '~/_storybook/withCenteredStyle';\nimport { withCustomTheme } from '~/_storybook/withCustomTheme';\nimport Component, { ResponsiveTextProps } from '.';\nconst meta = ({\n  title: 'Design/ResponsiveText',\n  component: Component,\n  decorators: [withCustomTheme, withCenteredStyle({\n    width: '100%',\n    background: 'teal',\n    minHeight: `100vh`,\n    display: 'grid',\n    placeItems: 'center'\n  })],\n  args: {\n    text: 'Hello world'\n  },\n  argTypes: {\n    variant: {\n      control: 'radio',\n      options: ['bold', 'regular'],\n      defaultValue: 'bold'\n    }\n  }\n} satisfies Meta<typeof Component>);\nexport default meta;\ntype Story = StoryObj<typeof meta>;\nconst Asd = (props: ResponsiveTextProps & {\n  width: number;\n}) => <div style={{\n  width: props.width,\n  background: 'red',\n  display: 'flex',\n  justifyContent: 'center'\n}}>\r\n    <Component {...props} />\r\n  </div>;\nexport const Base: Story = {};\nexport const WithBackground: StoryObj<typeof Asd> = {\n  render: props => <Asd {...props} />,\n  args: {\n    width: 200\n  }\n};\nBase.parameters = {\n  ...Base.parameters,\n  storySource: {\n    source: \"{}\",\n    ...Base.parameters?.storySource\n  }\n};\nWithBackground.parameters = {\n  ...WithBackground.parameters,\n  storySource: {\n    source: \"{\\n  render: props => <Asd {...props} />,\\n  args: {\\n    width: 200\\n  }\\n}\",\n    ...WithBackground.parameters?.storySource\n  }\n};"],"names":["getTextWidth","text","font","context","variantToFont","variant","variantToXPadding","variantToYHeight","Component","memo","props","xpad","y","width","jsx","classes","meta","withCustomTheme","withCenteredStyle","Asd","Base","WithBackground","_a"],"mappings":"8QAIaA,EAA6B,CAACC,EAAMC,IAAS,CAKlD,MAAAC,GAHJH,EAAa,SACZA,EAAa,OAAS,SAAS,cAAc,QAAQ,IAEjC,WAAW,IAAI,EAEtC,OAAKG,GAILA,EAAQ,KAAOD,EACCC,EAAQ,YAAYF,CAAI,EACzB,OALN,CAMX,ECNAG,EAAAC,GAAA,CACE,OAAAA,EAAA,CAAiB,IAAA,OAEb,MAAA,mBAAO,IAAA,UAEP,MAAA,aAAO,CAEb,EAEAC,EAAAD,GAAA,CACE,OAAAA,EAAA,CAAiB,IAAA,OAEb,MAAA,IAAO,IAAA,UAEP,MAAA,GAAO,CAEb,EAEAE,EAAAF,GAAA,CACE,OAAAA,EAAA,CAAiB,IAAA,OAEb,MAAA,IAAO,IAAA,UAEP,MAAA,GAAO,CAEb,EAEAG,EAAAC,EAAA,KAAAC,GAAA,CACE,KAAA,CAAA,KAAAT,EAAA,QAAAI,EAAA,MAAA,EAAAK,EAEAR,EAAAE,EAAAC,CAAA,EACAM,EAAAL,EAAAD,CAAA,EACAO,EAAAL,EAAAF,CAAA,EAEAQ,EAAAb,EAAAC,EAAAC,CAAA,EAAAS,EAAA,EAEA,OAAAG,EAAA,IACE,MAAC,CAAA,QAAA,OAAAD,KAAAD,IAC0B,MAAA,CAAA,MAAAC,EAAA,WAAA,UAAA,KAAA,OAAA,EAC4B,SAAAC,EAAA,IAErD,OAAC,CAAA,EAAA,MACG,EAAA,MACA,WAAA,SACS,iBAAA,UACM,UAAAC,EAAA,KAAAV,CAAA,EACc,SAAAJ,CAE9B,CAAA,CACH,CAAA,CAGN,CAAA,sWC5DA,MAAMe,EAAQ,CACZ,MAAO,wBACP,UAAWR,EACX,WAAY,CAACS,EAAiBC,EAAkB,CAC9C,MAAO,OACP,WAAY,OACZ,UAAW,QACX,QAAS,OACT,WAAY,QAAA,CACb,CAAC,EACF,KAAM,CACJ,KAAM,aACR,EACA,SAAU,CACR,QAAS,CACP,QAAS,QACT,QAAS,CAAC,OAAQ,SAAS,EAC3B,aAAc,MAChB,CACF,CACF,EAGMC,EAAOT,GAEPI,EAAA,IAAC,OAAI,MAAO,CAChB,MAAOJ,EAAM,MACb,WAAY,MACZ,QAAS,OACT,eAAgB,QAClB,EACI,SAACI,EAAAA,IAAAN,EAAA,CAAW,GAAGE,CAAA,CAAO,CACxB,CAAA,EACWU,EAAc,CAAC,EACfC,EAAuC,CAClD,OAAQX,GAAUI,EAAAA,IAAAK,EAAA,CAAK,GAAGT,EAAO,EACjC,KAAM,CACJ,MAAO,GACT,CACF,QACAU,EAAK,WAAa,CAChB,GAAGA,EAAK,WACR,YAAa,CACX,OAAQ,KACR,IAAGE,EAAAF,EAAK,aAAL,YAAAE,EAAiB,WACtB,CACF,QACAD,EAAe,WAAa,CAC1B,GAAGA,EAAe,WAClB,YAAa,CACX,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,GACR,IAAGC,EAAAD,EAAe,aAAf,YAAAC,EAA2B,WAChC,CACF"}